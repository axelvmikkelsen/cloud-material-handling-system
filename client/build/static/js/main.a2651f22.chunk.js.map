{"version":3,"sources":["shared/util/timeUtil.js","shared/components/Navigation/ntnu_logo.png","shared/hooks/auth-hook.js","dashboard/components/TableItem.js","dashboard/components/TableList.js","dashboard/components/SOTable.js","dashboard/components/MHMTable.js","dashboard/components/Jobtable.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","dashboard/components/JobCard/JobCard.js","shared/components/UIElements/ReactModal.js","dashboard/getDataFunctions/getDataFunctions.js","dashboard/pages/Dashboard.js","create/CreateJob.js","create/CreateTag.js","shared/components/UIElements/Footer.js","shared/context/auth-context.js","shared/components/Navigation/Navigation.js","auth/pages/Auth.js","App.js","index.js"],"names":["exports","timestampToDate","t","timestamptToTimeAgo","now","Date","CURRENT_TIMEZONE","diff","Math","round","convertToDate","timestamp","date","day","getDay","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","module","logoutTimer","TableItem","props","Object","keys","map","entry","key","TableList","content","objects","length","Table","responsive","headers","title","row","id","SOTable","i","obj","name","zone","lastseen","timeUtil","err","console","log","push","Card","className","Body","Title","Text","description","MHMTable","workstatus","status","JobTable","jobs","created","timecreated","timeassigned","assigned","timecompleted","completed","Fragment","LoadingSpinner","Spinner","animation","role","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","a","method","body","httpAbortController","AbortController","current","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","JobCard","jobKey","setJobKey","loadedJobs","setLoadedJobs","process","requestJob","style","marginLeft","marginRight","marginBottom","Header","Tabs","activeKey","onSelect","tab","Tab","eventKey","type","ReactModal","show","setShow","handleClose","clear","Modal","onHide","closeButton","heading","Footer","Button","variant","onClick","save","requestSOs","setLoadedSOs","requestMHMs","setLoadedMHMs","requestJobs","requestDashboardData","stat1","stat2","stat3","Dashboard","loadedSOs","loadedMHMs","mqttIsActive","setMqttIsActive","assignmentIsActive","setAssignmentIsActive","getDataFunctions","dbRefreshInterval","setInterval","clearInterval","mqttButton","aebutton","fireMqttConnection","JSON","stringify","mqttstatus","success","fireAssignmentConnection","aestatus","border","size","width","overflow","float","marginTop","align","margin","CardDeck","CreateJob","options","fromxcoord","fromycoord","toxcoord","toycoord","so","formState","setFormState","formSuccess","setFormSuccess","value","onSubmitHandler","event","preventDefault","from","x","y","to","soid","inputHandler","target","newState","Form","onSubmit","Group","Label","Row","Col","xs","Control","placeholder","onChange","htmlFor","as","custom","default","CreateTag","agv","forklift","manual","transportclass","checkboxHandler","checked","Check","inline","label","phantom","display","padding","height","backgroundColor","borderTop","textAlign","position","left","bottom","text","color","fontSize","getUTCFullYear","AuthContext","createContext","isLoggedIn","token","userId","login","logout","Navigation","auth","useContext","Navbar","bg","Brand","href","paddingRight","src","logo","alt","Nav","Link","NavDropdown","Item","Divider","Auth","email","password","authSubmitHandler","Container","justifyContent","alginItems","block","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","expirationDate","currTokenExpirationDate","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","exact","Provider","ReactDOM","render","document","getElementById"],"mappings":"gGAkCAA,EAAQC,gBAhCgB,SAACC,KAiCzBF,EAAQG,oBAjBoB,SAACD,GAE1B,IAAME,GAAOC,KAAKD,MAASE,MAA8B,IACrDC,EAAOC,KAAKC,MAAML,EAAMF,GAAG,GAE/B,OAAIK,GAAQ,GACFC,KAAKC,MAAMF,EAAK,IAAM,aAInB,KADbA,EAAOC,KAAKC,MAAMF,IAER,WAEHA,EAAO,gBAKjBP,EAAQU,cA9Bc,SAACC,GACpB,IAAIC,EAAO,IAAIP,KAAKM,GAChBE,EAAMD,EAAKE,SACXC,EAAQH,EAAKI,WACbC,EAAOL,EAAKM,cACZC,EAAQP,EAAKQ,WACbC,EAAU,IAAMT,EAAKU,aACrBC,EAAU,IAAMX,EAAKY,aAEzB,OAAOL,EAAQ,IAAME,EAAQI,QAAQ,GAAK,IAAMF,EAAQE,QAAQ,GAAK,MAAQZ,EAAM,IAAME,EAAQ,IAAME,I,mBCf1GS,EAAO1B,QAAU,IAA0B,uC,oGCEvC2B,E,yHCWWC,EAXG,SAACC,GACjB,OACG,4BACIC,OAAOC,KAAKF,GAAOG,KAAI,SAAAC,GAAK,OAC1B,wBAAIC,IAAKD,GAAQJ,EAAMI,SC4BnBE,EA7BG,SAACN,GACjB,OAAqC,IAAjCA,EAAMO,QAAQC,QAAQC,OAEtB,6BACE,qDAMJ,6BACE,kBAACC,EAAA,EAAD,CAAOC,WAAW,MAChB,+BACE,4BACIX,EAAMO,QAAQK,QAAQT,KAAI,SAACU,GAAD,OACxB,wBAAIR,IAAKQ,GAAQA,QAIzB,+BACGb,EAAMO,QAAQC,QAAQL,KAAI,SAACW,GAAD,OACvB,kBAAC,EAAD,eAAWT,IAAKS,EAAIC,IAAQD,W,iBCgB3BE,EAnCC,SAAChB,GAMf,IAJA,IAEMQ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMO,QAAQC,QAAQC,OAAQQ,IAAK,CACrD,IAAMC,EAAMlB,EAAMO,QAAQC,QAAQS,GAC5Bb,EAAQ,GACd,IACEA,EAAMW,GAAKG,EAAIC,KACff,EAAMgB,KAAOF,EAAIE,KACjBhB,EAAMiB,SAAWC,IAAShD,oBAAoB4C,EAAIG,UAClD,MAAOE,GACPC,QAAQC,IAAI,4CAGdjB,EAAQkB,KAAKtB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QAlBpB,CAAC,SAAU,OAAQ,cAoBnC,OACE,kBAACe,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAa9B,EAAMa,OACnB,kBAACc,EAAA,EAAKI,KAAN,KAAY/B,EAAMgC,aAClB,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWtB,QAASA,QCYf0B,EAvCE,SAACjC,GAMf,IAJA,IAEMQ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMO,QAAQC,QAAQC,OAAQQ,IAAK,CACpD,IAAMC,EAAMlB,EAAMO,QAAQC,QAAQS,GAC5Bb,EAAQ,GACd,IACEA,EAAMW,GAAKG,EAAIC,KACff,EAAM8B,WAAahB,EAAIgB,WACvB9B,EAAM+B,OAASjB,EAAIiB,OACnB/B,EAAMgB,KAAOF,EAAIE,KACjBhB,EAAMiB,SAAWC,IAAShD,oBAAoB4C,EAAIG,UAClD,MAAOE,GACPC,QAAQC,IAAI,4CAGdjB,EAAQkB,KAAKtB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QApBrB,CAAC,SAAU,aAAc,SAAU,OAAQ,cAsB5D,OACE,kBAACe,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAa9B,EAAMa,OACnB,kBAACc,EAAA,EAAKI,KAAN,KACI/B,EAAMgC,aAEV,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWtB,QAASA,Q,iBCcf6B,EA/CE,SAACpC,GAKhB,IAJA,IAAMY,EAAU,CAAC,cAAe,cAAe,WAEzCJ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMqC,KAAK5B,OAAQQ,IAAK,CAC1C,IAAMC,EAAMlB,EAAMqC,KAAKpB,GACjBb,EAAQ,GACd,IACEA,EAAMW,GAAKG,EAAIc,YACf5B,EAAM8B,WAAahB,EAAIgB,WACvB9B,EAAMkC,QAAUhB,IAASzC,cAAcqC,EAAIqB,aACvCrB,EAAIsB,eACN5B,EAAQc,KAAK,YACbtB,EAAMqC,SAAWnB,IAASzC,cAAcqC,EAAIsB,eAE1CtB,EAAIwB,gBACN9B,EAAQc,KAAK,aACbtB,EAAMuC,UAAYrB,IAASzC,cAAcqC,EAAIwB,gBAE/C,MAAOnB,GACPC,QAAQC,IAAI,4CAGdjB,EAAQkB,KAAKtB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QAASA,GAE7C,OACE,kBAACe,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACG7B,EAAMa,OACL,kBAAC,IAAM+B,SAAP,KACE,kBAACjB,EAAA,EAAKG,MAAN,KAAa9B,EAAMa,OACnB,kBAACc,EAAA,EAAKI,KAAN,KAAY/B,EAAMgC,cAItB,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWtB,QAASA,Q,QCnCfsC,EARQ,SAAA7C,GACpB,OACG,kBAAC8C,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC9B,0BAAMpB,UAAU,WAAhB,gBCLIqB,EAAgB,WAAO,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEPF,qBAFO,mBAE1BG,EAF0B,KAEnBC,EAFmB,KAI3BC,EAAoBC,iBAAO,IAE3BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMlD,EAAzC,+BAAmD,GACjDwC,GAAa,GACPW,EAAsB,IAAIC,gBAChCT,EAAkBU,QAAQvC,KAAKqC,GAHjC,kBAK2BG,MAAMP,EAAK,CAChCE,SACAC,OACAlD,UACAuD,OAAQJ,EAAoBI,SATlC,cAKUC,EALV,iBAY+BA,EAASC,OAZxC,WAYUC,EAZV,OAcIf,EAAkBU,QAAUV,EAAkBU,QAAQM,QACpD,SAACC,GAAD,OAAaA,IAAYT,KAGtBK,EAASK,GAlBlB,uBAmBMrB,GAAa,GACP,IAAIsB,MAAMJ,EAAaK,SApBnC,eAuBIvB,GAAa,GAvBjB,kBAwBWkB,GAxBX,wCA0BIhB,EAAS,KAAIqB,SACbvB,GAAa,GA3BjB,+DAD6B,sDAgC7B,IAcF,OANAwB,qBAAU,WACR,OAAO,WACLrB,EAAkBU,QAAQY,SAAQ,SAACC,GAAD,OAAeA,EAAUC,cAE5D,IAEI,CAAE5B,YAAWE,QAAOI,cAAauB,WAXrB,WACjB1B,EAAS,SCqBE2B,EAvDC,SAACjF,GAAW,IAAD,EACGkD,mBAAS,aADZ,mBAClBgC,EADkB,KACVC,EADU,OAGWjC,qBAHX,mBAGlBkC,EAHkB,KAGNC,EAHM,OAKUpC,IAA3BE,EALiB,EAKjBA,UAAWM,EALM,EAKNA,YAEfE,EAAM,eAAiBuB,EAgB3B,OAdAN,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,+EAEYH,EACzB6B,sCAAoC3B,GAHvB,OAETW,EAFS,OAKfe,EAAcf,EAAajC,MALZ,gDAOfb,QAAQC,IAAI,kBAPG,yDAAH,qDAUhB8D,KACC,CAAC9B,EAAayB,EAAQvB,IAGvB,kBAAChC,EAAA,EAAD,CACE6D,MAAO,CAAEC,WAAY,OAAQC,YAAa,OAAQC,aAAc,SAEhE,kBAAChE,EAAA,EAAKiE,OAAN,KACE,kBAACjE,EAAA,EAAKG,MAAN,aACA,kBAAC+D,EAAA,EAAD,CACE9E,GAAG,yBACH+E,UAAWZ,EACXa,SAAU,SAACC,GAAD,OAASb,EAAUa,KAE7B,kBAACC,EAAA,EAAD,CAAKC,SAAS,YAAYrF,MAAM,cAChC,kBAACoF,EAAA,EAAD,CAAKC,SAAS,cAAcrF,MAAM,gBAClC,kBAACoF,EAAA,EAAD,CAAKC,SAAS,YAAYrF,MAAM,gBAGpC,kBAACc,EAAA,EAAKE,KAAN,KACE,kBAAC,IAAMe,SAAP,KACGwC,IAAejC,GACd,kBAAC,EAAD,CAAUd,KAAM+C,EAAYe,KAAMjB,IAEnC/B,GACC,yBAAKvB,UAAU,UACb,kBAAC,EAAD,W,QCtBCwE,EA9BI,SAACpG,GAAW,IAAD,EACJkD,oBAAS,GADL,mBACrBmD,EADqB,KACfC,EADe,KAGtBC,EAAc,WAClBD,GAAQ,GACRtG,EAAMwG,SAGR,OACE,kBAAC,IAAM5D,SAAP,KACE,kBAAC6D,EAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,GACzB,kBAACE,EAAA,EAAMb,OAAP,CAAce,aAAW,GACvB,kBAACF,EAAA,EAAM3E,MAAP,KAAc9B,EAAM4G,UAEtB,kBAACH,EAAA,EAAM5E,KAAP,KAAa7B,EAAMqD,OACnB,kBAACoD,EAAA,EAAMI,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAST,GAArC,SAGCvG,EAAMiH,MACL,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAST,GAAnC,oBCxBNW,EAAU,uCAAG,WAAOC,EAAc1D,GAArB,eAAAG,EAAA,+EAEYH,EACzB6B,0CAHa,cAEThB,EAFS,OAMf6C,EAAa7C,GANE,mBAOR,GAPQ,uCASf9C,QAAQC,IAAI,uBATG,mBAUR,GAVQ,yDAAH,wDAcV2F,EAAW,uCAAG,WAAOC,EAAe5D,GAAtB,eAAAG,EAAA,+EAEWH,EACzB6B,2CAHc,cAEVhB,EAFU,OAMhB+C,EAAc/C,GANE,mBAOT,GAPS,uCAShB9C,QAAQC,IAAI,uBAAZ,MATgB,mBAUT,GAVS,yDAAH,wDAcX6F,EAAW,uCAAG,WAAOjC,EAAe5B,GAAtB,eAAAG,EAAA,+EAEWH,EACzB6B,4CAHc,cAEVhB,EAFU,OAMhBe,EAAcf,GANE,mBAOT,GAPS,uCAShB9C,QAAQC,IAAI,wBATI,mBAUT,GAVS,yDAAH,wDAiCF8F,EAnBW,uCAAG,WAC3BJ,EACAE,EACAhC,EACA5B,GAJ2B,mBAAAG,EAAA,+EAOLsD,EAAWC,EAAc1D,GAPpB,cAOnB+D,EAPmB,gBAQLJ,EAAYC,EAAe5D,GARtB,cAQnBgE,EARmB,gBASLH,EAAYjC,EAAe5B,GATtB,UASnBiE,EATmB,SAUrBF,GAASC,GAASC,GAVG,0CAWhB,WAXgB,iCAalB,UAbkB,kCAezBlG,QAAQC,IAAI,2CAAZ,MAfyB,0DAAH,4DC4IXkG,EA1KG,WAAO,IAAD,EACYzE,qBADZ,mBACf0E,EADe,KACJT,EADI,OAEcjE,qBAFd,mBAEf2E,EAFe,KAEHR,EAFG,OAGcnE,qBAHd,mBAGfkC,EAHe,KAGHC,EAHG,OAKqBpC,IAAnCI,EALc,EAKdA,MAAOI,EALO,EAKPA,YAAauB,EALN,EAKMA,WALN,EAOkB9B,oBAAS,GAP3B,mBAOf4E,EAPe,KAODC,EAPC,OAS8B7E,oBAAS,GATvC,mBASf8E,EATe,KASKC,EATL,KAYtBrD,qBAAU,WACRsD,EAAiBf,EAAcE,EAAehC,EAAe5B,GAC7D,IAAM0E,EAAoBC,YAAW,sBACnC,sBAAAxE,EAAA,sEACuBsE,EAAiBf,EAAcE,EAAehC,EAAe5B,GADpF,OAEiB,WAFjB,QAGI4E,cAAcF,GAHlB,2CAKG,KACL,OAAO,kBAAME,cAAcF,MAC1B,CAAC1E,IAEJ,IAgDI6E,EA6BAC,EA7EEC,EAAkB,uCAAG,WAAOrG,GAAP,SAAAyB,EAAA,+EAEAH,EACrB6B,qDACA,OACAmD,KAAKC,UAAU,CACbC,WAAYxG,IAEd,CAAE,eAAgB,qBARG,cAUVyG,UACI,aAAXzG,GACF4F,GAAgB,GAEH,aAAX5F,GACF4F,GAAgB,IAfG,gDAmBvBvG,QAAQC,IAAI,4CAnBW,yDAAH,sDAuBlBoH,EAAwB,uCAAG,WAAO1G,GAAP,SAAAyB,EAAA,+EAENH,EACrB6B,mDACA,OACAmD,KAAKC,UAAU,CACbI,SAAU3G,IAEZ,CAAE,eAAgB,qBARS,cAUhByG,UACI,aAAXzG,GACF8F,GAAsB,GAET,aAAX9F,GACF8F,GAAsB,IAfG,gDAmB7BzG,QAAQC,IACN,wEApB2B,yDAAH,sDAkF9B,OAvDKqG,IACHQ,EACE,kBAAC3G,EAAA,EAAD,CACEoH,OAAO,QACPnH,UAAU,aACVoF,QAAS,kBAAMwB,EAAmB,cAElC,kBAAC1B,EAAA,EAAD,CAAQkC,KAAK,KAAKjC,QAAQ,mBAA1B,kBAMFe,IACFQ,EACE,kBAAC3G,EAAA,EAAD,CACEoH,OAAO,QACPnH,UAAU,aACVoF,QAAS,kBAAMwB,EAAmB,cAElC,kBAAC1B,EAAA,EAAD,CAAQkC,KAAK,KAAKjC,QAAQ,mBAA1B,qBAQDiB,IACHO,EACE,kBAAC5G,EAAA,EAAD,CACEoH,OAAO,QACPnH,UAAU,aACVoF,QAAS,kBAAM6B,EAAyB,cAExC,kBAAC/B,EAAA,EAAD,CAAQkC,KAAK,KAAKjC,QAAQ,mBAA1B,6BAMFiB,IACFO,EACE,kBAAC5G,EAAA,EAAD,CACEoH,OAAO,QACPnH,UAAU,aACVoF,QAAS,kBAAM6B,EAAyB,cAExC,kBAAC/B,EAAA,EAAD,CAAQkC,KAAK,KAAKjC,QAAQ,mBAA1B,gCAQJ,6BACE,kBAACpF,EAAA,EAAD,CAAMoH,OAAO,SACX,kBAACpH,EAAA,EAAKE,KAAN,KACE,yBAAK2D,MAAO,CAAEyD,MAAO,OAAQC,SAAU,WACrC,yBAAK1D,MAAO,CAAEyD,MAAO,MAAOE,MAAO,SACjC,0CAEF,yBAAK3D,MAAO,CAAEC,WAAY,QAASE,aAAc,QAC9C2C,GAEH,yBAAK9C,MAAO,CAAEC,WAAY,QAAS2D,UAAW,QAC3Cb,IAIL,wBAAI/C,MAAO,CAAE4D,UAAW,OAAQC,MAAO,SAAUJ,MAAO,aAG3D5F,GAAS,kBAAC,EAAD,CAAYuD,QAAS,uBAAwBvD,MAAOA,EAAO4D,MAAM,EAAOT,MAAOxB,IACxF6C,GAAcD,GAAaxC,GAC1B,kBAAC,IAAMxC,SAAP,KACE,kBAAC,EAAD,CAAS4C,MAAO,CAAE8D,OAAQ,OAASjH,KAAM+C,IACzC,kBAACmE,EAAA,EAAD,CAAU/D,MAAO,CAAE8D,OAAQ,MAAO3D,aAAc,SAC9C,kBAAC,EAAD,CACE9E,MAAO,gBACPmB,YAAa,gEACbzB,QAASqH,IAEX,kBAAC,EAAD,CACE/G,MAAO,4BACPmB,YAAa,4CACbzB,QAASsH,Q,wBCaR2B,EAjLG,WAAO,IAcnBC,EAdkB,EACYvG,qBADZ,mBACf0E,EADe,KACJT,EADI,OAEYjE,mBAAS,CACzClB,YAAa,GACb0H,WAAY,KACZC,WAAY,KACZC,SAAU,KACVC,SAAU,KACVC,GAAI,OARgB,mBAEfC,EAFe,KAEJC,EAFI,OAUgB9G,oBAAS,GAVzB,mBAUf+G,EAVe,KAUFC,EAVE,OAYgCjH,IAA9CE,EAZc,EAYdA,UAAWE,EAZG,EAYHA,MAAOI,EAZJ,EAYIA,YAAauB,EAZjB,EAYiBA,WAIvCJ,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,+EAEYH,EACzB6B,0CAHa,OAEThB,EAFS,OAKf6C,EAAa7C,EAAa9D,SALX,uGAAH,qDAQhB0G,KACC,CAACzD,IAEAmE,IACF6B,EAAU7B,EAAUzH,KAAI,SAAC2J,GAAD,OACtB,4BAAQzJ,IAAKyJ,EAAG/I,GAAIoJ,MAAOL,EAAG/I,IAA9B,OACO+I,EAAG3I,UAKd,IAAMiJ,EAAe,uCAAG,WAAOC,GAAP,eAAAzG,EAAA,6DACtByG,EAAMC,iBACAxG,EAAO,CACX9B,YAAa+H,EAAU/H,YACvBuI,KAAM,CACJC,EAAGT,EAAUL,WACbe,EAAGV,EAAUJ,YAEfe,GAAI,CACFF,EAAGT,EAAUH,SACba,EAAGV,EAAUF,UAEfc,KAAMZ,EAAUD,IAZI,kBAeGrG,EACrB6B,2CACA,OACAmD,KAAKC,UAAU5E,GACf,CAAE,eAAgB,qBAnBA,cAsBP8E,SACVsB,GAAe,GAvBE,gDA0BpB1I,QAAQC,IAAI4B,GA1BQ,yDAAH,sDA8BfuH,EAAe,SAACP,GAAW,IAAD,EACRA,EAAMQ,OAApB9J,EADsB,EACtBA,GAAIoJ,EADkB,EAClBA,MACNW,EAAQ,eAAQf,GACtBe,EAAS/J,GAAMoJ,EACfH,EAAa,eAAKc,KAGpB,OAAIb,EACM,kBAAC,IAAD,CAAUS,GAAG,eAIrB,kBAAC/I,EAAA,EAAD,CAAM6D,MAAO,CAAE8D,OAAQ,SACrB,kBAAC3H,EAAA,EAAKiE,OAAN,KACE,kBAACjE,EAAA,EAAKG,MAAN,CAAY0D,MAAO,CAAE4D,UAAW,SAAhC,eAEF,kBAACzH,EAAA,EAAKE,KAAN,KACGwB,GAAS,kBAAC,EAAD,CAAYuD,QAAS,uBAAwBvD,MAAOA,EAAO4D,MAAM,EAAOT,MAAOxB,IACxF7B,GAAa,kBAAC,EAAD,OACZA,GACA,kBAAC4H,EAAA,EAAD,CAAMC,SAAUZ,GACd,kBAACW,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,cACHoF,KAAK,OACLoF,YAAY,oBACZC,SAAUZ,OAMlB,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,aACHoF,KAAK,SACLoF,YAAY,eACZC,SAAUZ,KAGd,kBAACQ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,aACHoF,KAAK,SACLoF,YAAY,eACZC,SAAUZ,OAMlB,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,WACHoF,KAAK,SACLoF,YAAY,eACZC,SAAUZ,KAGd,kBAACQ,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,WACHoF,KAAK,SACLoF,YAAY,eACZC,SAAUZ,OAMlB,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYtJ,UAAU,UAAU6J,QAAQ,YAAxC,uBAGA,kBAACV,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEI,GAAG,SACH9J,UAAU,UACVb,GAAG,KACH4K,QAAM,EACNH,SAAUZ,GAEV,4BAAQgB,SAAO,EAACzB,MAAO,MAAvB,OAGCV,MAMT,kBAAC3C,EAAA,EAAD,CAAQC,QAAQ,UAAUZ,KAAK,UAA/B,cCGG0F,EA1KG,WAAO,IAAD,EACY3I,mBAAS,CACzC/B,KAAM,KACNgF,KAAM,GACN2F,KAAK,EACLC,UAAU,EACVC,QAAQ,EACRhK,YAAa,KAPO,mBACf+H,EADe,KACJC,EADI,OAUgB9G,oBAAS,GAVzB,mBAUf+G,EAVe,KAUFC,EAVE,OAYgCjH,IAA9CE,EAZc,EAYdA,UAAWE,EAZG,EAYHA,MAAOI,EAZJ,EAYIA,YAAauB,EAZjB,EAYiBA,WAEjCoF,EAAe,uCAAG,WAAOC,GAAP,iBAAAzG,EAAA,6DACtByG,EAAMC,iBAaY,QAZZxG,EAAO,CACX3C,KAAM4I,EAAU5I,KAChBgF,KAAM4D,EAAU5D,KAChB8F,eAAgB,CACdH,IAAK/B,EAAU+B,IACfC,SAAUhC,EAAUgC,SACpBC,OAAQjC,EAAUiC,QAEpBhK,YAAa+H,EAAU/H,cAIhBmE,OACPxC,EAAM,OAEU,QAAdG,EAAKqC,OACPxC,EAAM,QAlBc,kBAsBGF,EACrB6B,sCAAoC3B,EACpC,OACA8E,KAAKC,UAAU5E,GACf,CAAE,eAAgB,qBA1BA,cA6BP8E,SACXsB,GAAe,GA9BG,kDAiCpB1I,QAAQC,IAAI4B,GAjCQ,0DAAH,sDAqCfuH,EAAe,SAACP,GAAW,IAAD,EACRA,EAAMQ,OAApB9J,EADsB,EACtBA,GAAIoJ,EADkB,EAClBA,MACNW,EAAQ,eAAQf,GACtBe,EAAS/J,GAAMoJ,EACfH,EAAa,eAAKc,KAGdoB,EAAkB,SAAC7B,GAAW,IAAD,EACTA,EAAMQ,OAAtB9J,EADyB,EACzBA,GAAIoL,EADqB,EACrBA,QACNrB,EAAQ,eAAQf,GACtBe,EAAS/J,GAAMoL,EACfnC,EAAa,eAAKc,KAGpB,OAAIb,EACK,kBAAC,IAAD,CAAUS,GAAG,eAIpB,kBAAC/I,EAAA,EAAD,CAAM6D,MAAO,CAAE8D,OAAQ,SACrB,kBAAC3H,EAAA,EAAKiE,OAAN,KACE,kBAACjE,EAAA,EAAKG,MAAN,CAAY0D,MAAO,CAAE4D,UAAW,SAAhC,eAEF,kBAACzH,EAAA,EAAKE,KAAN,KACGwB,GACC,kBAAC,EAAD,CACEuD,QAAS,uBACTvD,MAAOA,EACP4D,MAAM,EACNT,MAAOxB,IAGV7B,GAAa,kBAAC,EAAD,OACZA,GACA,kBAAC4H,EAAA,EAAD,CAAMC,SAAUZ,GACd,kBAACW,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,2BACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,OACHoF,KAAK,OACLoF,YAAY,0BACZC,SAAUZ,OAKlB,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEI,GAAG,SACH9J,UAAU,UACVb,GAAG,OACH4K,QAAM,EACNH,SAAUZ,GAEV,4BAAQgB,SAAO,EAACzB,MAAO,MAAvB,OAGA,4BAAQA,MAAM,MAAd,gBACA,4BAAQA,MAAM,OAAd,gCAKR,kBAACY,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,wBACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKqB,MAAN,CACEC,QAAM,EACNC,MAAM,MACNnG,KAAK,WACLpF,GAAG,MACHyK,SAAUU,IAEZ,kBAACnB,EAAA,EAAKqB,MAAN,CACEC,QAAM,EACNC,MAAM,WACNnG,KAAK,WACLpF,GAAG,WACHyK,SAAUU,IAEZ,kBAACnB,EAAA,EAAKqB,MAAN,CACEC,QAAM,EACNC,MAAM,SACNnG,KAAK,WACLpF,GAAG,SACHyK,SAAUU,OAKlB,kBAACnB,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKI,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACP,kBAACN,EAAA,EAAKO,QAAN,CACEvK,GAAG,cACHoF,KAAK,OACLoF,YAAY,oBACZC,SAAUZ,OAKlB,kBAAC9D,EAAA,EAAD,CAAQC,QAAQ,UAAUZ,KAAK,UAA/B,cCvKNoG,EAAU,CACdC,QAAS,QACTC,QAAS,OACTC,OAAQ,OACRzD,MAAO,QAGHzD,EAAQ,CACZmH,gBAAiB,UACjBC,UAAW,oBACXC,UAAW,QACXC,SAAU,QACVC,KAAM,IACNC,OAAQ,IACRN,OAAQ,OACRzD,MAAO,QAGHgE,EAAO,CACX7D,UAAW,MACX1D,YAAa,OACbwH,MAAO,WACPC,SAAU,QACVX,QAAS,SAGLzN,EAAO,IAAIP,KAaFqI,EAXA,WACb,OACE,6BACE,yBAAKrB,MAAO+G,IACZ,yBAAK/G,MAAOA,GACV,uBAAGA,MAAOyH,GAAV,QAAmBlO,EAAKqO,iBAAxB,4DCjCKC,EAAcC,wBAAc,CACvCC,YAAY,EACZC,MAAO,KACPC,OAAQ,KACRC,MAAO,aACPC,OAAQ,e,yCCgCKC,GAhCI,WACjB,IAAMC,EAAOC,qBAAWT,GACxB,OACE,kBAACU,EAAA,EAAD,CAAQC,GAAG,OAAOjH,QAAQ,QACxB,kBAACgH,EAAA,EAAOE,MAAR,CAAcC,KAAK,cAChB,IACD,yBACE1I,MAAO,CAAE2I,aAAc,OAAQlF,MAAO,QACtCmF,IAAKC,IACLC,IAAI,SALR,kCASCT,EAAKN,YACJ,kBAAC,IAAM3K,SAAP,KACE,kBAAC2L,EAAA,EAAD,CAAK3M,UAAU,WACb,kBAAC2M,EAAA,EAAIC,KAAL,CAAUN,KAAK,cAAf,aACA,kBAACO,EAAA,EAAD,CAAa5N,MAAM,aAAaE,GAAG,gBACjC,kBAAC0N,EAAA,EAAYC,KAAb,CAAkBR,KAAK,eAAvB,OACA,kBAACO,EAAA,EAAYE,QAAb,MACA,kBAACF,EAAA,EAAYC,KAAb,CAAkBR,KAAK,eAAvB,SAGJ,kBAACK,EAAA,EAAD,KACE,kBAACA,EAAA,EAAIC,KAAL,CAAUxH,QAAS6G,EAAKF,QAAxB,gB,kBC4DGiB,GAnFF,WACX,IAAMf,EAAOC,qBAAWT,GADP,EAGiBnK,mBAAS,CACzC2L,MAAO,GACPC,SAAU,KALK,mBAGV/E,EAHU,KAGCC,EAHD,OAQ0B/G,IAAnCI,EARS,EAQTA,MAAOI,EARE,EAQFA,YAAauB,EARX,EAQWA,WAEtB+J,EAAiB,uCAAG,WAAO1E,GAAP,eAAAzG,EAAA,6DACxByG,EAAMC,iBADkB,kBAIK7G,EACzB6B,kDACA,OACAmD,KAAKC,UAAU,CACbmG,MAAO9E,EAAU8E,MACjBC,SAAU/E,EAAU+E,WAEtB,CAAE,eAAgB,qBAXE,OAIhBxK,EAJgB,OActBuJ,EAAKH,MAAMpJ,EAAamJ,OAAQnJ,EAAakJ,OAdvB,gDAgBtBhM,QAAQC,IAAI,gBAhBU,yDAAH,sDAoBjBmJ,EAAe,SAACP,GAAW,IAAD,EACRA,EAAMQ,OAApB9J,EADsB,EACtBA,GAAIoJ,EADkB,EAClBA,MACNW,EAAQ,eAAQf,GACtBe,EAAS/J,GAAMoJ,EACfH,EAAa,eAAKc,KAGpB,OACE,kBAACkE,GAAA,EAAD,CACExJ,MAAO,CACLyJ,eAAgB,SAChBzC,QAAS,OACT0C,WAAY,SACZ9F,UAAW,UAGZ/F,GAAS,kBAAC,EAAD,CAAYuD,QAAS,eAAgBvD,MAAOA,EAAO4D,MAAM,EAAOT,MAAOxB,IACjF,kBAACmG,GAAA,EAAD,KACE,kBAACxJ,EAAA,EAAD,CAAM6D,MAAO,CAAEyD,MAAO,UACpB,kBAACtH,EAAA,EAAKiE,OAAN,CAAahE,UAAU,eAAvB,kCAGA,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACkJ,EAAA,EAAD,CAAMC,SAAU+D,GACd,kBAAChE,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,sBACA,kBAACH,EAAA,EAAKO,QAAN,CACEvK,GAAG,QACHoF,KAAK,QACLoF,YAAY,cACZC,SAAUZ,KAGd,kBAACG,EAAA,EAAKE,MAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,iBACA,kBAACH,EAAA,EAAKO,QAAN,CACEvK,GAAG,WACHoF,KAAK,WACLoF,YAAY,WACZC,SAAUZ,KAGd,kBAAC9D,EAAA,EAAD,CAAQC,QAAQ,UAAUoI,OAAK,EAAChJ,KAAK,UAArC,gBCjBCiJ,GA7CH,WAAO,IAGbC,EAHY,ElBdK,WAAO,IAAD,EACDnM,oBAAS,GADR,mBACpBsK,EADoB,KACb8B,EADa,OAE2BpM,qBAF3B,mBAEpBqM,EAFoB,KAECC,EAFD,OAGCtM,qBAHD,mBAGpBuK,EAHoB,KAGZgC,EAHY,KAKrB/B,EAAQhK,uBAAY,SAAC+J,EAAQD,EAAOkC,GACxCJ,EAAS9B,GACTiC,EAAUhC,GACV,IAAMkC,EACJD,GAAkB,IAAIlR,MAAK,IAAIA,MAAOoR,UAAY,MACpDJ,EAAuBG,GACvBE,aAAaC,QACX,WACArH,KAAKC,UAAU,CACb+E,OAAQA,EACRD,MAAOA,EACPuC,WAAYJ,EAAwBK,mBAGvC,IAEGrC,EAASjK,uBAAY,WACzB4L,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVI,aAAaI,WAAW,cACvB,IA2BH,OAzBArL,qBAAU,WACR,GAAI4I,GAAS+B,EAAqB,CAChC,IAAMW,EACJX,EAAoBK,WAAY,IAAIpR,MAAOoR,UAC7C9P,EAAcqQ,WAAWxC,EAAQuC,QAEjCE,aAAatQ,KAEd,CAAC0N,EAAOG,EAAQ4B,IAEnB3K,qBAAU,WACR,IAAMyL,EAAa5H,KAAK6H,MAAMT,aAAaU,QAAQ,aAEjDF,GACAA,EAAW7C,OACX,IAAIhP,KAAK6R,EAAWN,YAAc,IAAIvR,MAEtCkP,EACE2C,EAAW5C,OACX4C,EAAW7C,MACX,IAAIhP,KAAK6R,EAAWN,eAGvB,CAACrC,IAEG,CAAEF,QAAOE,QAAOC,SAAQF,UkBtCU+C,GAAjChD,EADQ,EACRA,MAAOE,EADC,EACDA,MAAOC,EADN,EACMA,OAAQF,EADd,EACcA,OAyB9B,OApBE4B,EADE7B,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiD,KAAK,cAAcC,OAAK,GAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,GAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAK,GAC5B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAUhG,GAAG,gBAKX,kBAAC,GAAD,MAKN,kBAAC2C,EAAYsD,SAAb,CACExG,MAAO,CACLoD,aAAcC,EACdA,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,8BAAO0B,IAET,kBAAC,EAAD,QCpDNuB,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.a2651f22.chunk.js","sourcesContent":["const CURRENT_TIMEZONE = 2;\n\nconst timestampToDate = (t) => {\n\n}\n\nconst convertToDate = (timestamp) => {\n   let date = new Date(timestamp);\n   let day = date.getDay();\n   let month = date.getMonth();\n   let year = date.getFullYear();\n   let hours = date.getHours();\n   let minutes = \"0\" + date.getMinutes();\n   let seconds = \"0\" + date.getSeconds();\n \n   return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2) + '   ' + day + '/' + month + '-' + year ;\n }\n\nconst timestamptToTimeAgo = (t) => {\n   // Now in milliseconds\n   const now = (Date.now() - (CURRENT_TIMEZONE*60*60*1000))/1000\n   let diff = Math.round(now - t)/60; // Minutes\n   \n   if (diff >= 60) {\n      return Math.round(diff/60) + ' hours ago'\n   }\n\n   diff = Math.round(diff)\n   if (diff === 0) {\n      return 'Just now'\n   }\n   return diff + ' minutes ago'\n}\n\nexports.timestampToDate = timestampToDate; \nexports.timestamptToTimeAgo = timestamptToTimeAgo; \nexports.convertToDate = convertToDate;","module.exports = __webpack_public_path__ + \"static/media/ntnu_logo.9b4c0ba4.png\";","import { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setUserId(userId);\n    const currTokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(currTokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: userId,\n        token: token,\n        expiration: currTokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nconst TableItem = (props) => {\n  return (\n     <tr>\n        {Object.keys(props).map(entry => (\n           <td key={entry}>{props[entry]}</td>\n        ))}\n     </tr>\n     \n  );\n};\n\nexport default TableItem;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport TableItem from './TableItem';\n\nconst TableList = (props) => {\n  if (props.content.objects.length === 0) {\n    return (\n      <div>\n        <h2>No content available</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n             {props.content.headers.map((title) => (\n                <th key={title}>{title}</th>\n             ))}\n          </tr>\n        </thead>\n        <tbody>\n          {props.content.objects.map((row) => (\n              <TableItem key={row.id} {...row} />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TableList;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\nimport timeUtil from '../../shared/util/timeUtil';\n\n\nconst SOTable = (props) => {\n\n  const headers = ['Tag ID', 'Zone', 'Last seen'];\n\n  const objects = [];\n\n  for (let i = 0; i < props.content.objects.length; i++) {\n    const obj = props.content.objects[i];\n    const entry = {};\n    try {\n      entry.id = obj.name;\n      entry.zone = obj.zone;\n      entry.lastseen = timeUtil.timestamptToTimeAgo(obj.lastseen);\n    } catch (err) {\n      console.log('Something went wrong accessing the array');\n    }\n\n    objects.push(entry);\n  }\n\n  const content = { objects: objects, headers: headers}\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\">\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>{props.description}</Card.Text>\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SOTable;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\nimport timeUtil from '../../shared/util/timeUtil';\n\n\n\nconst MHMTable = (props) => {\n\n   const headers = ['Tag ID', 'Workstatus', 'Status', 'Zone', 'Last seen']\n\n   const objects = []\n\n   for (let i = 0; i < props.content.objects.length; i++) {\n      const obj = props.content.objects[i];\n      const entry = {};\n      try {\n        entry.id = obj.name;\n        entry.workstatus = obj.workstatus\n        entry.status = obj.status\n        entry.zone = obj.zone;\n        entry.lastseen = timeUtil.timestamptToTimeAgo(obj.lastseen);\n      } catch (err) {\n        console.log('Something went wrong accessing the array');\n      }\n  \n      objects.push(entry);\n    }\n  \n    const content = { objects: objects, headers: headers}\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\">\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>\n           {props.description}\n        </Card.Text>\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MHMTable;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\n\nimport timeUtil from '../../shared/util/timeUtil';\n\nconst JobTable = (props) => {\n  const headers = ['Description', 'Work Status', 'Created'];\n\n  const objects = [];\n\n  for (let i = 0; i < props.jobs.length; i++) {\n    const obj = props.jobs[i];\n    const entry = {};\n    try {\n      entry.id = obj.description;\n      entry.workstatus = obj.workstatus;\n      entry.created = timeUtil.convertToDate(obj.timecreated);\n      if (obj.timeassigned) {\n        headers.push('Assigned');\n        entry.assigned = timeUtil.convertToDate(obj.timeassigned);\n      }\n      if (obj.timecompleted) {\n        headers.push('Completed');\n        entry.completed = timeUtil.convertToDate(obj.timecompleted);\n      }\n    } catch (err) {\n      console.log('Something went wrong accessing the array');\n    }\n\n    objects.push(entry);\n  }\n\n  const content = { objects: objects, headers: headers };\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\">\n      <Card.Body>\n        {props.title && (\n          <React.Fragment>\n            <Card.Title>{props.title}</Card.Title>\n            <Card.Text>{props.description}</Card.Text>\n          </React.Fragment>\n        )}\n\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default JobTable;\n","import React from 'react';\n\nimport { Spinner } from 'react-bootstrap';\n\nconst LoadingSpinner = props => {\n   return (\n      <Spinner animation=\"border\" role=\"status\">\n         <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n   )\n} \n\nexport default LoadingSpinner;","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequest.current.push(httpAbortController);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequest.current = activeHttpRequest.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortController\n        );\n\n        if (!response.ok) {\n          setIsLoading(false);\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // => Clearnup, never request from a page were no longer visiting.\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Card, Tab, Tabs } from 'react-bootstrap';\n\nimport JobTable from '../Jobtable';\n\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\n\nconst JobCard = (props) => {\n  const [jobKey, setJobKey] = useState('scheduled');\n\n  const [loadedJobs, setLoadedJobs] = useState();\n\n  const { isLoading, sendRequest } = useHttpClient();\n\n  let url = '/jobs/table/' + jobKey;\n\n  useEffect(() => {\n    const requestJob = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + url\n        );\n        setLoadedJobs(responseData.jobs);\n      } catch (err) {\n        console.log('Cold not fetch');\n      }\n    };\n    requestJob();\n  }, [sendRequest, jobKey, url]);\n\n  return (\n    <Card\n      style={{ marginLeft: '20px', marginRight: '20px', marginBottom: '25px' }}\n    >\n      <Card.Header>\n        <Card.Title>Jobs</Card.Title>\n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={jobKey}\n          onSelect={(tab) => setJobKey(tab)}\n        >\n          <Tab eventKey=\"scheduled\" title=\"Scheduled\"></Tab>\n          <Tab eventKey=\"unscheduled\" title=\"Unscheduled\"></Tab>\n          <Tab eventKey=\"completed\" title=\"Completed\"></Tab>\n        </Tabs>\n      </Card.Header>\n      <Card.Body>\n        <React.Fragment>\n          {loadedJobs && !isLoading && (\n            <JobTable jobs={loadedJobs} type={jobKey} />\n          )}\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n        </React.Fragment>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default JobCard;\n","import React, { useState } from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ReactModal = (props) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    props.clear();\n  };\n  // const handleShow = () => setShow(true);\n  return (\n    <React.Fragment>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.heading}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.error}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          {props.save && (\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default ReactModal;\n","const requestSOs = async (setLoadedSOs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/so'\n    );\n\n    setLoadedSOs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch SOs');\n    return false;\n  }\n};\n\nconst requestMHMs = async (setLoadedMHMs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/mhm'\n    );\n\n    setLoadedMHMs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch MHMs', err);\n    return false;\n  }\n};\n\nconst requestJobs = async (setLoadedJobs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/jobs'\n    );\n\n    setLoadedJobs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch Jobs');\n    return false;\n  }\n};\n\nconst requestDashboardData = async (\n  setLoadedSOs,\n  setLoadedMHMs,\n  setLoadedJobs,\n  sendRequest\n) => {\n  try {\n    const stat1 = await requestSOs(setLoadedSOs, sendRequest);\n    const stat2 = await requestMHMs(setLoadedMHMs, sendRequest);\n    const stat3 = await requestJobs(setLoadedJobs, sendRequest);\n    if (stat1 && stat2 && stat3) {\n      return 'success';\n    }\n    return 'failed';\n  } catch (err) {\n    console.log('[requestDashboardData], An error occured', err);\n  }\n};\n\nexport default requestDashboardData;\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardDeck, Button } from 'react-bootstrap';\n\nimport SOTable from '../components/SOTable';\nimport MHMTable from '../components/MHMTable';\nimport JobCard from '../components/JobCard/JobCard';\n\nimport ReactModal from '../../shared/components/UIElements/ReactModal';\n\nimport getDataFunctions from '../getDataFunctions/getDataFunctions';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Dashboard = () => {\n  const [loadedSOs, setLoadedSOs] = useState();\n  const [loadedMHMs, setLoadedMHMs] = useState();\n  const [loadedJobs, setLoadedJobs] = useState();\n\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const [mqttIsActive, setMqttIsActive] = useState(false);\n\n  const [assignmentIsActive, setAssignmentIsActive] = useState(false);\n\n\n  useEffect(() => {\n    getDataFunctions(setLoadedSOs, setLoadedMHMs, setLoadedJobs, sendRequest);\n    const dbRefreshInterval = setInterval(\n      async () => {\n        const status = await getDataFunctions(setLoadedSOs, setLoadedMHMs, setLoadedJobs, sendRequest);\n        if (status === 'failed') {\n          clearInterval(dbRefreshInterval);\n        }\n      }, 10000);\n    return () => clearInterval(dbRefreshInterval);\n  }, [sendRequest]);\n\n  const fireMqttConnection = async (status) => {\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/lifecycle/mqtt',\n        'POST',\n        JSON.stringify({\n          mqttstatus: status,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      if (response.success) {\n        if (status === 'activate') {\n          setMqttIsActive(true);\n        }\n        if (status === 'shutdown') {\n          setMqttIsActive(false);\n        }\n      }\n    } catch (err) {\n      console.log('Something went wrong in the post request');\n    }\n  };\n\n  const fireAssignmentConnection = async (status) => {\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/lifecycle/ae',\n        'POST',\n        JSON.stringify({\n          aestatus: status,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      if (response.success) {\n        if (status === 'activate') {\n          setAssignmentIsActive(true);\n        }\n        if (status === 'shutdown') {\n          setAssignmentIsActive(false);\n        }\n      }\n    } catch (err) {\n      console.log(\n        'Something went wrong starting or shutting down the assignment engine'\n      );\n    }\n  };\n\n  let mqttButton;\n\n  if (!mqttIsActive) {\n    mqttButton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireMqttConnection('activate')}\n      >\n        <Button size=\"sm\" variant=\"outline-primary\">\n          Connect MQTT\n        </Button>\n      </Card>\n    );\n  }\n  if (mqttIsActive) {\n    mqttButton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireMqttConnection('shutdown')}\n      >\n        <Button size=\"sm\" variant=\"outline-warning\">\n          Disconnect MQTT\n        </Button>\n      </Card>\n    );\n  }\n\n  let aebutton;\n  if (!assignmentIsActive) {\n    aebutton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireAssignmentConnection('activate')}\n      >\n        <Button size=\"sm\" variant=\"outline-primary\">\n          Start Assignment Engine\n        </Button>\n      </Card>\n    );\n  }\n  if (assignmentIsActive) {\n    aebutton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireAssignmentConnection('shutdown')}\n      >\n        <Button size=\"sm\" variant=\"outline-warning\">\n          Shutdown Assignment Engine\n        </Button>\n      </Card>\n    );\n  }\n\n  return (\n    <div>\n      <Card border=\"light\">\n        <Card.Body>\n          <div style={{ width: '100%', overflow: 'hidden' }}>\n            <div style={{ width: '80%', float: 'left' }}>\n              <h1>Dashboard</h1>\n            </div>\n            <div style={{ marginLeft: '150px', marginBottom: '5px' }}>\n              {mqttButton}\n            </div>\n            <div style={{ marginLeft: '150px', marginTop: '5px' }}>\n              {aebutton}\n            </div>\n          </div>\n\n          <hr style={{ marginTop: '20px', align: 'center', width: '99.7%' }} />\n        </Card.Body>\n      </Card>\n      {error && <ReactModal heading={\"Backend fetch failed\"} error={error} save={false} clear={clearError} />}\n      {loadedMHMs && loadedSOs && loadedJobs && (\n        <React.Fragment>\n          <JobCard style={{ margin: '5px' }} jobs={loadedJobs} />\n          <CardDeck style={{ margin: '5px', marginBottom: '15px' }}>\n            <SOTable\n              title={'Smart Objects'}\n              description={'Objects to be picked up and delivered at specified locations.'}\n              content={loadedSOs}\n            />\n            <MHMTable\n              title={'Material Handling Modules'}\n              description={'Handlers able to transport Smart Objects.'}\n              content={loadedMHMs}\n            />\n          </CardDeck>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { useHttpClient } from '../shared/hooks/http-hook';\n\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport ReactModal from '../shared/components/UIElements/ReactModal';\n\nconst CreateJob = () => {\n  const [loadedSOs, setLoadedSOs] = useState();\n  const [formState, setFormState] = useState({\n    description: '',\n    fromxcoord: null,\n    fromycoord: null,\n    toxcoord: null,\n    toycoord: null,\n    so: null,\n  });\n  const [formSuccess, setFormSuccess] = useState(false);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  let options;\n\n  useEffect(() => {\n    const requestSOs = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/so'\n        );\n        setLoadedSOs(responseData.objects);\n      } catch (err) {}\n    };\n    requestSOs();\n  }, [sendRequest]);\n\n  if (loadedSOs) {\n    options = loadedSOs.map((so) => (\n      <option key={so.id} value={so.id}>\n        Tag {so.name}\n      </option>\n    ));\n  }\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    const body = {\n      description: formState.description,\n      from: {\n        x: formState.fromxcoord,\n        y: formState.fromycoord,\n      },\n      to: {\n        x: formState.toxcoord,\n        y: formState.toycoord,\n      },\n      soid: formState.so,\n    };\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/jobs',\n        'POST',\n        JSON.stringify(body),\n        { 'Content-Type': 'application/json' }\n      );\n\n      if (response.success) {\n         setFormSuccess(true);\n      }\n    } catch (err) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  if (formSuccess) {\n     return <Redirect to=\"/dashboard\" />\n  }\n\n  return (\n    <Card style={{ margin: '20px' }}>\n      <Card.Header>\n        <Card.Title style={{ marginTop: '10px' }}>Create Job</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        {error && <ReactModal heading={\"Something went wrong\"} error={error} save={false} clear={clearError} />}\n        {isLoading && <LoadingSpinner />}\n        {!isLoading && (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    id=\"description\"\n                    type=\"text\"\n                    placeholder=\"Enter description\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>From Location</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"fromxcoord\"\n                    type=\"number\"\n                    placeholder=\"X-Coordinate\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"fromycoord\"\n                    type=\"number\"\n                    placeholder=\"Y-Coordinate\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>To Location</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"toxcoord\"\n                    type=\"number\"\n                    placeholder=\"X-Coordinate\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"toycoord\"\n                    type=\"number\"\n                    placeholder=\"Y-Coordinate\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label className=\"mr-sm-2\" htmlFor=\"chooseSO\">\n                Choose Smart Object\n              </Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"so\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    {options}\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CreateJob;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { useHttpClient } from '../shared/hooks/http-hook';\n\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport ReactModal from '../shared/components/UIElements/ReactModal';\n\nconst CreateTag = () => {\n  const [formState, setFormState] = useState({\n    name: null,\n    type: '',\n    agv: false,\n    forklift: false,\n    manual: false,\n    description: '',\n  });\n\n  const [formSuccess, setFormSuccess] = useState(false);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    const body = {\n      name: formState.name,\n      type: formState.type,\n      transportclass: {\n        agv: formState.agv,\n        forklift: formState.forklift,\n        manual: formState.manual,\n      },\n      description: formState.description,\n    };\n\n    let url;\n    if (body.type === 'so') {\n      url = '/so';\n    }\n    if (body.type === 'mhm') {\n      url = '/mhm';\n    }\n\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + url,\n        'POST',\n        JSON.stringify(body),\n        { 'Content-Type': 'application/json' }\n      );\n\n      if (response.success) {\n        setFormSuccess(true);\n      }\n    } catch (err) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  const checkboxHandler = (event) => {\n    const { id, checked } = event.target;\n    const newState = { ...formState };\n    newState[id] = checked;\n    setFormState({ ...newState });\n  };\n\n  if (formSuccess) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Card style={{ margin: '20px' }}>\n      <Card.Header>\n        <Card.Title style={{ marginTop: '10px' }}>Create Tag</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        {error && (\n          <ReactModal\n            heading={'Something went wrong'}\n            error={error}\n            save={false}\n            clear={clearError}\n          />\n        )}\n        {isLoading && <LoadingSpinner />}\n        {!isLoading && (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group>\n              <Form.Label>Name (ID in pozyx)</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter ID number for Tag\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Type</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"type\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    <option value=\"so\">Smart Object</option>\n                    <option value=\"mhm\">Material Handling Module</option>\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Transport Class</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Check\n                    inline\n                    label=\"AGV\"\n                    type=\"checkbox\"\n                    id=\"agv\"\n                    onChange={checkboxHandler}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Forklift\"\n                    type=\"checkbox\"\n                    id=\"forklift\"\n                    onChange={checkboxHandler}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Manual\"\n                    type=\"checkbox\"\n                    id=\"manual\"\n                    onChange={checkboxHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    id=\"description\"\n                    type=\"text\"\n                    placeholder=\"Enter description\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CreateTag;\n","import React from 'react';\n\nconst phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n};\n\nconst style = {\n  backgroundColor: '#343a40',\n  borderTop: '1px solid #E7E7E7',\n  textAlign: 'right',\n  position: 'fixed',\n  left: '0',\n  bottom: '0',\n  height: '30px',\n  width: '100%',\n};\n\nconst text = {\n  marginTop: '5px',\n  marginRight: '15px',\n  color: 'darkGrey',\n  fontSize: 'small',\n  display: 'block',\n};\n\nconst date = new Date();\n\nconst Footer = () => {\n  return (\n    <div>\n      <div style={phantom} />\n      <div style={style}>\n        <p style={text}>© {date.getUTCFullYear()} Dept. of Mechanical and Industrial Engineering, NTNU</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React, { useContext } from 'react';\n\nimport { AuthContext } from '../../../shared/context/auth-context';\n\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport logo from './ntnu_logo.png';\n\nconst Navigation = () => {\n  const auth = useContext(AuthContext);\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/dashboard\">\n        {' '}\n        <img\n          style={{ paddingRight: '10px', width: '40px' }}\n          src={logo}\n          alt=\"LOGO\"\n        />\n        Cloud Material Handling System\n      </Navbar.Brand>\n      {auth.isLoggedIn && (\n        <React.Fragment>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n            <NavDropdown title=\"Create new\" id=\"nav-dropdown\">\n              <NavDropdown.Item href=\"/create/job\">Job</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/create/tag\">Tag</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link onClick={auth.logout}>Sign out</Nav.Link>\n          </Nav>\n        </React.Fragment>\n      )}\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useContext } from 'react';\n\nimport { Container, Row, Card, Form, Button } from 'react-bootstrap';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport ReactModal from '../../shared/components/UIElements/ReactModal';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/login/login',\n        'POST',\n        JSON.stringify({\n          email: formState.email,\n          password: formState.password,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {\n      console.log('login failed');\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  return (\n    <Container\n      style={{\n        justifyContent: 'center',\n        display: 'flex',\n        alginItems: 'center',\n        marginTop: '200px',\n      }}\n    >\n      {error && <ReactModal heading={\"Login failed\"} error={error} save={false} clear={clearError} />}\n      <Row>\n        <Card style={{ width: '500px'}}>\n          <Card.Header className=\"text-center\">\n            Please enter login credentials\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={authSubmitHandler}>\n              <Form.Group>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={inputHandler}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={inputHandler}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" block type=\"submit\">\n                LOG IN\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport Dashboard from './dashboard/pages/Dashboard';\nimport CreateJob from './create/CreateJob';\nimport CreateTag from './create/CreateTag';\nimport Footer from './shared/components/UIElements/Footer';\nimport Navigation from './shared/components/Navigation/Navigation';\nimport Auth from './auth/pages/Auth';\n\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/create/job\" exact>\n          <CreateJob />\n        </Route>\n        <Route path=\"/create/tag\" exact>\n          <CreateTag />\n        </Route>\n        <Route path=\"/dashboard\" exact>\n          <Dashboard />\n        </Route>\n        <Redirect to=\"/dashboard\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n          <Auth />\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <Navigation />\n        <main>{routes}</main>\n      </Router>\n      <Footer />\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}