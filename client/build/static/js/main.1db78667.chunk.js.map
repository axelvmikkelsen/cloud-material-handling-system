{"version":3,"sources":["shared/util/timeUtil.js","shared/components/Navigation/ntnu_logo.png","shared/hooks/auth-hook.js","dashboard/components/TableItem.js","dashboard/components/TableList.js","dashboard/components/SOTable.js","dashboard/components/MHMTable.js","dashboard/components/Jobtable.js","shared/components/UIElements/LoadingSpinner.js","shared/hooks/http-hook.js","dashboard/components/JobCard/JobCard.js","dashboard/components/InfoTable/InfoTable.js","shared/components/UIElements/ReactModal.js","dashboard/getDataFunctions/getDataFunctions.js","dashboard/pages/Dashboard.js","create/CreateJob.js","create/CreateTag.js","shared/components/UIElements/Footer.js","shared/context/auth-context.js","shared/components/Navigation/Navigation.js","auth/pages/Auth.js","App.js","index.js"],"names":["exports","timestampToDate","t","timestamptToTimeAgo","now","Date","CURRENT_TIMEZONE","diff","Math","round","convertToDate","timestamp","date","day","getDay","month","getMonth","year","getFullYear","hours","getHours","minutes","getMinutes","seconds","getSeconds","substr","module","logoutTimer","TableItem","props","Object","keys","map","entry","key","TableList","content","objects","length","Table","responsive","headers","title","row","random","SOTable","i","obj","id","byname","area","lastseen","timeUtil","err","console","log","push","Card","className","Body","Title","Text","description","MHMTable","workstatus","status","JobTable","jobs","timeassigned","timecompleted","from","fromarea","to","toarea","so","mhm","created","timecreated","assigned","completed","Fragment","LoadingSpinner","Spinner","animation","role","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequest","useRef","sendRequest","useCallback","url","a","method","body","httpAbortController","AbortController","current","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","JobCard","jobKey","setJobKey","loadedJobs","setLoadedJobs","process","requestJob","style","marginLeft","marginRight","marginBottom","borderRadius","Header","Tabs","activeKey","onSelect","tab","Tab","eventKey","type","InfoTable","rowStyle","borderBottom","paddingTop","paddingBottom","rightStyle","textAlign","autoRefresh","setAutoRefresh","server","paddingRight","float","width","height","backgroundColor","fontSize","mqtt","isactive","position","top","Container","Row","Col","href","target","rel","buttonGroup","Form","onChange","triggerAutoRefresh","Check","label","ReactModal","show","setShow","handleClose","clear","Modal","onHide","closeButton","heading","Footer","Button","variant","onClick","save","requestSOs","setLoadedSOs","requestMHMs","setLoadedMHMs","requestJobs","requestTableData","setLoadedTableData","requestDashboardData","stat1","stat2","stat3","stat4","Dashboard","loadedSOs","loadedMHMs","loadedTableData","mqttIsActive","setMqttIsActive","assignmentIsActive","setAssignmentIsActive","getDataFunctions","mqttButton","aebutton","fireMqttConnection","JSON","stringify","mqttstatus","success","fireAssignmentConnection","aestatus","border","size","intervalId","dbRefreshInterval","clearInterval","CardDeck","maxHeight","minHeight","sm","margin","state","setInterval","CreateJob","soOptions","areaOptions","loadedAreas","setLoadedAreas","formState","setFormState","formSubmitSuccess","setFormSubmitSuccess","requestAreas","areas","value","name","onSubmitHandler","event","preventDefault","soid","inputHandler","newState","marginTop","onSubmit","Group","Label","xs","Control","placeholder","as","custom","default","htmlFor","CreateTag","agv","forklift","manual","formSuccess","setFormSuccess","transportclass","checkboxHandler","checked","inline","phantom","display","padding","borderTop","left","bottom","text","color","getUTCFullYear","AuthContext","createContext","isLoggedIn","token","userId","login","logout","Navigation","auth","useContext","Navbar","bg","Brand","src","logo","alt","Nav","Link","NavDropdown","Item","Divider","Auth","email","password","authSubmitHandler","justifyContent","alginItems","block","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","expirationDate","currTokenExpirationDate","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","exact","Provider","ReactDOM","render","document","getElementById"],"mappings":"gGAkCAA,EAAQC,gBAhCgB,SAACC,KAiCzBF,EAAQG,oBAjBoB,SAACD,GAE1B,IAAME,GAAOC,KAAKD,MAASE,MAA8B,IACrDC,EAAOC,KAAKC,MAAML,EAAMF,GAAG,GAE/B,OAAIK,GAAQ,GACFC,KAAKC,MAAMF,EAAK,IAAM,aAInB,KADbA,EAAOC,KAAKC,MAAMF,IAER,WAEHA,EAAO,gBAKjBP,EAAQU,cA9Bc,SAACC,GACpB,IAAIC,EAAO,IAAIP,KAAKM,GAChBE,EAAMD,EAAKE,SACXC,EAAQH,EAAKI,WACbC,EAAOL,EAAKM,cACZC,EAAQP,EAAKQ,WACbC,EAAU,IAAMT,EAAKU,aACrBC,EAAU,IAAMX,EAAKY,aAEzB,OAAOL,EAAQ,IAAME,EAAQI,QAAQ,GAAK,IAAMF,EAAQE,QAAQ,GAAK,MAAQZ,EAAM,IAAME,EAAQ,IAAME,I,mBCf1GS,EAAO1B,QAAU,IAA0B,uC,oGCEvC2B,E,iICWWC,EAXG,SAACC,GACjB,OACG,4BACIC,OAAOC,KAAKF,GAAOG,KAAI,SAAAC,GAAK,OAC1B,wBAAIC,IAAKD,GAAQJ,EAAMI,SC4BnBE,EA7BG,SAACN,GACjB,OAAqC,IAAjCA,EAAMO,QAAQC,QAAQC,OAEtB,6BACE,qDAMJ,6BACE,kBAACC,EAAA,EAAD,CAAOC,WAAW,MAChB,+BACE,4BACIX,EAAMO,QAAQK,QAAQT,KAAI,SAACU,GAAD,OACxB,wBAAIR,IAAKQ,GAAQA,QAIzB,+BACGb,EAAMO,QAAQC,QAAQL,KAAI,SAACW,GAAD,OACvB,kBAAC,EAAD,eAAWT,IAAK1B,KAAKoC,UAAcD,W,iBCgBlCE,EAnCC,SAAChB,GAMf,IAJA,IAEMQ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMO,QAAQC,QAAQC,OAAQQ,IAAK,CACrD,IAAMC,EAAMlB,EAAMO,QAAQC,QAAQS,GAC5Bb,EAAQ,GACd,IACEA,EAAMe,GAAKD,EAAIE,OACfhB,EAAMiB,KAAOH,EAAIG,KACjBjB,EAAMkB,SAAWC,IAASjD,oBAAoB4C,EAAII,UAClD,MAAOE,GACPC,QAAQC,IAAI,4CAGdlB,EAAQmB,KAAKvB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QAlBpB,CAAC,OAAQ,OAAQ,cAoBjC,OACE,kBAACgB,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAa/B,EAAMa,OACnB,kBAACe,EAAA,EAAKI,KAAN,KAAYhC,EAAMiC,aAClB,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWvB,QAASA,QCYf2B,EAvCE,SAAClC,GAMf,IAJA,IAEMQ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMO,QAAQC,QAAQC,OAAQQ,IAAK,CACpD,IAAMC,EAAMlB,EAAMO,QAAQC,QAAQS,GAC5Bb,EAAQ,GACd,IACEA,EAAMe,GAAKD,EAAIE,OACfhB,EAAM+B,WAAajB,EAAIiB,WACvB/B,EAAMgC,OAASlB,EAAIkB,OACnBhC,EAAMiB,KAAOH,EAAIG,KACjBjB,EAAMkB,SAAWC,IAASjD,oBAAoB4C,EAAII,UAClD,MAAOE,GACPC,QAAQC,IAAI,4CAGdlB,EAAQmB,KAAKvB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QApBrB,CAAC,OAAQ,aAAc,SAAU,OAAQ,cAsB1D,OACE,kBAACgB,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,KAAa/B,EAAMa,OACnB,kBAACe,EAAA,EAAKI,KAAN,KACIhC,EAAMiC,aAEV,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWvB,QAASA,Q,iBC2Bf8B,EA5DE,SAACrC,GAKhB,IAJA,IAAMY,EAAU,CAAC,OAAQ,KAAM,KAAM,MAAO,cAAe,WAErDJ,EAAU,GAEPS,EAAI,EAAGA,EAAIjB,EAAMsC,KAAK7B,OAAQQ,IAAK,CAC1C,IAAMC,EAAMlB,EAAMsC,KAAKrB,GACjBb,EAAQ,GACJ,IAANa,IACEC,EAAIqB,cACN3B,EAAQe,KAAK,YAEXT,EAAIsB,eACN5B,EAAQe,KAAK,cAIP,IAANV,GACFQ,QAAQC,IAAIR,GAEd,IACEd,EAAMqC,KAAOvB,EAAIwB,SACjBtC,EAAMuC,GAAKzB,EAAI0B,OACfxC,EAAMyC,GAAK3B,EAAI2B,GACfzC,EAAM0C,IAAM5B,EAAI4B,IAChB1C,EAAM+B,WAAajB,EAAIiB,WACvB/B,EAAM2C,QAAUxB,IAAS1C,cAAcqC,EAAI8B,aACvC9B,EAAIqB,eACNnC,EAAM6C,SAAW1B,IAAS1C,cAAcqC,EAAIqB,eAE1CrB,EAAIsB,gBACNpC,EAAM8C,UAAY3B,IAAS1C,cAAcqC,EAAIsB,gBAE/C,MAAOhB,GACPC,QAAQC,IAAI,4CAGdlB,EAAQmB,KAAKvB,GAGf,IAAMG,EAAU,CAAEC,QAASA,EAASI,QAASA,GAE7C,OACE,kBAACgB,EAAA,EAAD,CAAMC,UAAU,iDACd,kBAACD,EAAA,EAAKE,KAAN,KACG9B,EAAMa,OACL,kBAAC,IAAMsC,SAAP,KACE,kBAACvB,EAAA,EAAKG,MAAN,KAAa/B,EAAMa,OACnB,kBAACe,EAAA,EAAKI,KAAN,KAAYhC,EAAMiC,cAItB,kBAACL,EAAA,EAAKE,KAAN,KACE,kBAAC,EAAD,CAAWvB,QAASA,Q,QChDf6C,EARQ,SAAApD,GACpB,OACG,kBAACqD,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK,UAC9B,0BAAM1B,UAAU,WAAhB,gBCLI2B,EAAgB,WAAO,IAAD,EACCC,oBAAS,GADV,mBAC1BC,EAD0B,KACfC,EADe,OAEPF,qBAFO,mBAE1BG,EAF0B,KAEnBC,EAFmB,KAI3BC,EAAoBC,iBAAO,IAE3BC,EAAcC,sBAAW,uCAC7B,WAAOC,GAAP,qCAAAC,EAAA,6DAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,+BAAmC,KAAMzD,EAAzC,+BAAmD,GACjD+C,GAAa,GACPW,EAAsB,IAAIC,gBAChCT,EAAkBU,QAAQ7C,KAAK2C,GAHjC,kBAK2BG,MAAMP,EAAK,CAChCE,SACAC,OACAzD,UACA8D,OAAQJ,EAAoBI,SATlC,cAKUC,EALV,iBAY+BA,EAASC,OAZxC,WAYUC,EAZV,OAcIf,EAAkBU,QAAUV,EAAkBU,QAAQM,QACpD,SAACC,GAAD,OAAaA,IAAYT,KAGtBK,EAASK,GAlBlB,uBAmBMrB,GAAa,GACP,IAAIsB,MAAMJ,EAAaK,SApBnC,eAuBIvB,GAAa,GAvBjB,kBAwBWkB,GAxBX,wCA0BIhB,EAAS,KAAIqB,SACbvB,GAAa,GA3BjB,+DAD6B,sDAgC7B,IAcF,OANAwB,qBAAU,WACR,OAAO,WACLrB,EAAkBU,QAAQY,SAAQ,SAACC,GAAD,OAAeA,EAAUC,cAE5D,IAEI,CAAE5B,YAAWE,QAAOI,cAAauB,WAXrB,WACjB1B,EAAS,SCqBE2B,EAvDC,SAACxF,GAAW,IAAD,EACGyD,mBAAS,aADZ,mBAClBgC,EADkB,KACVC,EADU,OAGWjC,qBAHX,mBAGlBkC,EAHkB,KAGNC,EAHM,OAKUpC,IAA3BE,EALiB,EAKjBA,UAAWM,EALM,EAKNA,YAEfE,EAAM,eAAiBuB,EAgB3B,OAdAN,qBAAU,YACQ,uCAAG,4BAAAhB,EAAA,+EAEYH,EACzB6B,sCAAoC3B,GAHvB,OAETW,EAFS,OAKfe,EAAcf,EAAavC,MALZ,gDAOfb,QAAQC,IAAI,qBAPG,yDAAH,qDAUhBoE,KACC,CAAC9B,EAAayB,EAAQvB,IAGvB,kBAACtC,EAAA,EAAD,CACEmE,MAAO,CAAEC,WAAY,OAAQC,YAAa,OAAQC,aAAc,OAAQC,aAAc,QAEtF,kBAACvE,EAAA,EAAKwE,OAAN,KACE,kBAACxE,EAAA,EAAKG,MAAN,aACA,kBAACsE,EAAA,EAAD,CACElF,GAAG,yBACHmF,UAAWb,EACXc,SAAU,SAACC,GAAD,OAASd,EAAUc,KAE7B,kBAACC,EAAA,EAAD,CAAKC,SAAS,YAAY7F,MAAM,cAChC,kBAAC4F,EAAA,EAAD,CAAKC,SAAS,cAAc7F,MAAM,gBAClC,kBAAC4F,EAAA,EAAD,CAAKC,SAAS,YAAY7F,MAAM,gBAGpC,kBAACe,EAAA,EAAKE,KAAN,KACE,kBAAC,IAAMqB,SAAP,KACGwC,IAAejC,GACd,kBAAC,EAAD,CAAUpB,KAAMqD,EAAYgB,KAAMlB,IAEnC/B,GACC,yBAAK7B,UAAU,UACb,kBAAC,EAAD,W,wBCuDC+E,EA3GG,SAAC5G,GACjB,IAAM6G,EAAW,CACfC,aAAc,mBACdC,WAAY,MACZC,cAAe,OAGXC,EAAa,CACjBC,UAAW,SARc,EAWWzD,oBAAS,GAXpB,mBAWpB0D,EAXoB,KAWPC,EAXO,KAmBvBC,EACF,6BACE,0BAAMtB,MAAO,CAAEuB,aAAc,QAA7B,SACA,yBACEvB,MAAO,CACLwB,MAAO,QACPC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,SACjBvB,aAAc,WAKD,IAAjBnG,EAAMqH,SACRA,EACE,6BACE,0BAAMtB,MAAO,CAAEuB,aAAc,MAAOK,SAAU,SAA9C,WACA,yBACE5B,MAAO,CACLwB,MAAO,QACPC,MAAO,OACPC,OAAQ,OACRC,gBAAiB,UACjBvB,aAAc,YAOxB,IAAIyB,EACF,6BACE,+CAWJ,OARI5H,EAAM6H,WACRD,EACE,6BACE,6CAMJ,kBAAChG,EAAA,EAAD,CACEmE,MAAO,CACLI,aAAc,MACd2B,SAAU,WACVC,IAAK,KACL9B,YAAa,QAGf,kBAACrE,EAAA,EAAKE,KAAN,KACE,kBAACF,EAAA,EAAKG,MAAN,CAAYF,UAAU,eAAtB,WACA,kBAACmG,EAAA,EAAD,CAAWrH,WAAW,MACpB,kBAACsH,EAAA,EAAD,CAAKlC,MAAOc,GACV,kBAACqB,EAAA,EAAD,eACA,kBAACA,EAAA,EAAD,CAAKnC,MAAOkB,GAAaI,IAE3B,kBAACY,EAAA,EAAD,CAAKlC,MAAOc,GACV,kBAACqB,EAAA,EAAD,aACA,kBAACA,EAAA,EAAD,CAAKnC,MAAOkB,GAAaW,IAE3B,kBAACK,EAAA,EAAD,CAAKlC,MAAOc,GACV,kBAACqB,EAAA,EAAD,mBACA,kBAACA,EAAA,EAAD,CAAKnC,MAAOkB,GArER,eAuEN,kBAACgB,EAAA,EAAD,CAAKlC,MAAOc,GACV,kBAACqB,EAAA,EAAD,KAAK,uBAAGC,KAAK,wBAAwBC,OAAO,SAASC,IAAI,sBAAsBtC,MAAO,CAAEmB,UAAW,WAA9F,sBAGT,kBAACc,EAAA,EAAD,CAAWjC,MAAO,CAAEgB,WAAY,SAC7B/G,EAAMsI,aAET,kBAACC,EAAA,EAAD,CACExC,MAAO,CAAEmB,UAAW,UACpBsB,SAAU,WACRxI,EAAMyI,mBAAmBtB,EAAaC,KAGxC,kBAACmB,EAAA,EAAKG,MAAN,CAAY/B,KAAK,SAASxF,GAAG,sBAAsBwH,MAAM,gB,QCtEpDC,EA9BI,SAAC5I,GAAW,IAAD,EACJyD,oBAAS,GADL,mBACrBoF,EADqB,KACfC,EADe,KAGtBC,EAAc,WAClBD,GAAQ,GACR9I,EAAMgJ,SAGR,OACE,kBAAC,IAAM7F,SAAP,KACE,kBAAC8F,EAAA,EAAD,CAAOJ,KAAMA,EAAMK,OAAQH,GACzB,kBAACE,EAAA,EAAM7C,OAAP,CAAc+C,aAAW,GACvB,kBAACF,EAAA,EAAMlH,MAAP,KAAc/B,EAAMoJ,UAEtB,kBAACH,EAAA,EAAMnH,KAAP,KAAa9B,EAAM4D,OACnB,kBAACqF,EAAA,EAAMI,OAAP,KACE,kBAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,QAAST,GAArC,SAGC/I,EAAMyJ,MACL,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUC,QAAST,GAAnC,oBCxBNW,EAAU,uCAAG,WAAOC,EAAc3F,GAArB,eAAAG,EAAA,+EAEYH,EACzB6B,0CAHa,cAEThB,EAFS,OAMf8E,EAAa9E,GANE,mBAOR,GAPQ,uCASfpD,QAAQC,IAAI,uBATG,mBAUR,GAVQ,yDAAH,wDAcVkI,EAAW,uCAAG,WAAOC,EAAe7F,GAAtB,eAAAG,EAAA,+EAEWH,EACzB6B,2CAHc,cAEVhB,EAFU,OAMhBgF,EAAchF,GANE,mBAOT,GAPS,uCAShBpD,QAAQC,IAAI,uBAAZ,MATgB,mBAUT,GAVS,yDAAH,wDAcXoI,EAAW,uCAAG,WAAOlE,EAAe5B,GAAtB,eAAAG,EAAA,+EAEWH,EACzB6B,4CAHc,cAEVhB,EAFU,OAMhBe,EAAcf,GANE,mBAOT,GAPS,uCAShBpD,QAAQC,IAAI,wBATI,mBAUT,GAVS,yDAAH,wDAcXqI,EAAgB,uCAAG,WAAOC,EAAoBhG,GAA3B,eAAAG,EAAA,+EAEMH,EACzB6B,qDAHmB,OAEfhB,EAFe,OAKrBmF,EAAmBnF,GALE,gDAOrBpD,QAAQC,IAAI,6BAAZ,MAPqB,yDAAH,wDAiCPuI,EAtBW,uCAAG,WAC3BN,EACAE,EACAjE,EACAoE,EACAhG,GAL2B,qBAAAG,EAAA,+EAQLuF,EAAWC,EAAc3F,GARpB,cAQnBkG,EARmB,gBASLN,EAAYC,EAAe7F,GATtB,cASnBmG,EATmB,gBAULL,EAAYlE,EAAe5B,GAVtB,cAUnBoG,EAVmB,iBAWLL,EAAiBC,EAAoBhG,GAXhC,WAWnBqG,EAXmB,SAYrBH,GAASC,GAASC,GAASC,GAZN,0CAahB,WAbgB,iCAelB,UAfkB,yCAiBzB5I,QAAQC,IAAI,2CAAZ,MAjByB,kBAkBlB,UAlBkB,0DAAH,8DC6KX4I,EArNG,WAAO,IAAD,EACY7G,qBADZ,mBACf8G,EADe,KACJZ,EADI,OAEclG,qBAFd,mBAEf+G,EAFe,KAEHX,EAFG,OAGcpG,qBAHd,mBAGfkC,EAHe,KAGHC,EAHG,OAIwBnC,qBAJxB,mBAIfgH,EAJe,KAIET,EAJF,OAMqBxG,IAAnCI,EANc,EAMdA,MAAOI,EANO,EAMPA,YAAauB,EANN,EAMMA,WANN,EAQkB9B,oBAAS,GAR3B,mBAQfiH,EARe,KAQDC,EARC,OAU8BlH,oBAAS,GAVvC,mBAUfmH,EAVe,KAUKC,EAVL,KAYtB1F,qBAAU,WACR2F,EACEnB,EACAE,EACAjE,EACAoE,EACAhG,KAGD,CAACA,IAEJ,IAgDI+G,EA6BAC,EA7EEC,EAAkB,uCAAG,WAAO7I,GAAP,SAAA+B,EAAA,+EAEAH,EACrB6B,qDACA,OACAqF,KAAKC,UAAU,CACbC,WAAYhJ,IAEd,CAAE,eAAgB,qBARG,cAUViJ,UACI,aAAXjJ,GACFuI,GAAgB,GAEH,aAAXvI,GACFuI,GAAgB,IAfG,gDAmBvBlJ,QAAQC,IAAI,4CAnBW,yDAAH,sDAuBlB4J,EAAwB,uCAAG,WAAOlJ,GAAP,SAAA+B,EAAA,+EAENH,EACrB6B,mDACA,OACAqF,KAAKC,UAAU,CACbI,SAAUnJ,IAEZ,CAAE,eAAgB,qBARS,cAUhBiJ,UACI,aAAXjJ,GACFyI,GAAsB,GAET,aAAXzI,GACFyI,GAAsB,IAfG,gDAmB7BpJ,QAAQC,IACN,wEApB2B,yDAAH,sDA2BzBgJ,IACHK,EACE,kBAACnJ,EAAA,EAAD,CACE4J,OAAO,QACP3J,UAAU,aACV2H,QAAS,kBAAMyB,EAAmB,cAElC,kBAAC3B,EAAA,EAAD,CAAQmC,KAAK,KAAKlC,QAAQ,mBAA1B,kBAMFmB,IACFK,EACE,kBAACnJ,EAAA,EAAD,CACE4J,OAAO,QACP3J,UAAU,aACV2H,QAAS,kBAAMyB,EAAmB,cAElC,kBAAC3B,EAAA,EAAD,CAAQmC,KAAK,KAAKlC,QAAQ,mBAA1B,qBAQDqB,IACHI,EACE,kBAACpJ,EAAA,EAAD,CACE4J,OAAO,QACP3J,UAAU,aACV2H,QAAS,kBAAM8B,EAAyB,cAExC,kBAAChC,EAAA,EAAD,CAAQmC,KAAK,KAAKlC,QAAQ,mBAA1B,6BAMFqB,IACFI,EACE,kBAACpJ,EAAA,EAAD,CACE4J,OAAO,QACP3J,UAAU,aACV2H,QAAS,kBAAM8B,EAAyB,cAExC,kBAAChC,EAAA,EAAD,CAAQmC,KAAK,KAAKlC,QAAQ,mBAA1B,gCAON,IAOImC,EAPEpD,EACJ,6BACE,yBAAKvC,MAAO,CAAEiB,cAAe,SAAW+D,GACxC,yBAAKhF,MAAO,CAAEiB,cAAe,SAAWgE,IAMtCW,EAAiB,uCAAG,sBAAAxH,EAAA,+EAED2G,EACnBnB,EACAE,EACAjE,EACAoE,EACAhG,GAPoB,OASP,WATO,QAUpB4H,cAAcF,GAEhBjK,QAAQC,IAAI,aAZU,yGAAH,qDA2BvB,OACE,6BACE,kBAACE,EAAA,EAAD,CAAMmE,MAAO,CAAEyF,OAAQ,SACrB,kBAAC5J,EAAA,EAAKE,KAAN,OAED8B,GACC,kBAAC,EAAD,CACEwF,QAAS,uBACTxF,MAAOA,EACP6F,MAAM,EACNT,MAAOzD,IAGViF,GAAcD,GAAa5E,GAAc8E,GACxC,kBAAC,IAAMtH,SAAP,KACE,kBAAC0I,EAAA,EAAD,CAAU9F,MAAO,CAAE+F,UAAW,QAASC,UAAW,UAChD,kBAAC7D,EAAA,EAAD,CAAK8D,GAAI,GACP,kBAAC,EAAD,CAASjG,MAAO,CAAEkG,OAAQ,OAAS3J,KAAMqD,KAE3C,kBAACuC,EAAA,EAAD,CAAK8D,GAAI,GACP,kBAAC,EAAD,CACEnE,SAAU6C,EACVrD,OAAQoD,EAAgByB,MACxB5D,YAAaA,EACbG,mBAnCa,SAACtB,EAAaC,GACvC,GAAID,EAGF,OAFAyE,cAAcF,QACdtE,GAAe,GAGjBsE,EAAaS,YAAYR,EAAmB,KAC5CvE,GAAe,QAiCT,kBAACyE,EAAA,EAAD,CAAU9F,MAAO,CAAEkG,OAAQ,sBACzB,kBAAC,EAAD,CACEpL,MAAO,gBACPoB,YACE,gEAEF1B,QAASgK,IAEX,kBAAC,EAAD,CACE1J,MAAO,4BACPoB,YAAa,4CACb1B,QAASiK,Q,QCjBR4B,EA/LG,WAAO,IAanBC,EAAWC,EAbO,EACY7I,qBADZ,mBACf8G,EADe,KACJZ,EADI,OAEgBlG,qBAFhB,mBAEf8I,EAFe,KAEFC,EAFE,OAGY/I,mBAAS,CACzCxB,YAAa,GACbS,SAAU,KACVE,OAAQ,KACRC,GAAI,OAPgB,mBAGf4J,EAHe,KAGJC,EAHI,OAS4BjJ,oBAAS,GATrC,mBASfkJ,EATe,KASIC,EATJ,OAWgCpJ,IAA9CE,EAXc,EAWdA,UAAWE,EAXG,EAWHA,MAAOI,EAXJ,EAWIA,YAAauB,EAXjB,EAWiBA,WAIvCJ,qBAAU,WACR,IAAMuE,EAAU,uCAAG,4BAAAvF,EAAA,+EAEYH,EACzB6B,0CAHa,OAEThB,EAFS,OAKf8E,EAAa9E,EAAarE,SALX,uGAAH,qDAQVqM,EAAY,uCAAG,4BAAA1I,EAAA,+EAEUH,EACzB6B,0EAHe,OAEXhB,EAFW,OAMjB2H,EAAe3H,EAAaiI,OANX,uGAAH,qDASlBpD,IACAmD,MACC,CAAC7I,IAEAuG,IACF8B,EAAY9B,EAAUpK,KAAI,SAAC0C,GAAD,OACxB,4BAAQxC,IAAKwC,EAAG1B,GAAI4L,MAAOlK,EAAG1B,IAC3B0B,EAAGzB,YAKNmL,IACFD,EAAcC,EAAYpM,KAAI,SAACkB,GAAD,OAC5B,4BAAQhB,IAAKgB,EAAKF,GAAI4L,MAAO1L,EAAKF,IAC/BE,EAAK2L,UAKZ,IAAMC,EAAe,uCAAG,WAAOC,GAAP,eAAA/I,EAAA,6DACtB+I,EAAMC,iBACA9I,EAAO,CACXpC,YAAawK,EAAUxK,YACvBS,SAAU+J,EAAU/J,SACpBE,OAAQ6J,EAAU7J,OAClBwK,KAAMX,EAAU5J,IANI,kBASGmB,EACrB6B,2CACA,OACAqF,KAAKC,UAAU9G,GACf,CAAE,eAAgB,qBAbA,cAgBPgH,SACXuB,GAAqB,GAjBH,gDAoBpBnL,QAAQC,IAAIkC,GApBQ,yDAAH,sDAwBfyJ,EAAe,SAACH,GAAW,IAAD,EACRA,EAAM9E,OAApBjH,EADsB,EACtBA,GAAI4L,EADkB,EAClBA,MACNO,EAAQ,eAAQb,GACtBa,EAASnM,GAAM4L,EACfL,EAAa,eAAKY,KAGpB,OAAIX,EACK,kBAAC,IAAD,CAAUhK,GAAG,eAIpB,kBAACf,EAAA,EAAD,CAAMmE,MAAO,CAAEkG,OAAQ,SACrB,kBAACrK,EAAA,EAAKwE,OAAN,KACE,kBAACxE,EAAA,EAAKG,MAAN,CAAYgE,MAAO,CAAEwH,UAAW,SAAhC,eAEF,kBAAC3L,EAAA,EAAKE,KAAN,KACG8B,GACC,kBAAC,EAAD,CACEwF,QAAS,uBACTxF,MAAOA,EACP6F,MAAM,EACNT,MAAOzD,IAGV7B,GAAa,kBAAC,EAAD,OACZA,GACA,kBAAC6E,EAAA,EAAD,CAAMiF,SAAUP,GACd,kBAAC1E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,oBACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,cACHwF,KAAK,OACLkH,YAAY,oBACZrF,SAAU6E,OAMlB,kBAAC9E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,kBACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEE,GAAG,SACHjM,UAAU,UACVV,GAAG,WACH4M,QAAM,EACNvF,SAAU6E,GAEV,4BAAQW,SAAO,EAACjB,MAAO,MAAvB,OAGCT,MAMT,kBAAC/D,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,gBACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEE,GAAG,SACHjM,UAAU,UACVV,GAAG,SACH4M,QAAM,EACNvF,SAAU6E,GAEV,4BAAQW,SAAO,EAACjB,MAAO,MAAvB,OAGCT,MAMT,kBAAC/D,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,CAAY7L,UAAU,UAAUoM,QAAQ,YAAxC,uBAGA,kBAAC1F,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEE,GAAG,SACHjM,UAAU,UACVV,GAAG,KACH4M,QAAM,EACNvF,SAAU6E,GAEV,4BAAQW,SAAO,EAACjB,MAAO,MAAvB,OAGCV,MAMT,kBAAC/C,EAAA,EAAD,CAAQC,QAAQ,UAAU5C,KAAK,UAA/B,cCIGuH,EAzLG,WAAO,IAAD,EACYzK,mBAAS,CACzCuJ,KAAM,KACN5L,OAAQ,KACRuF,KAAM,GACNwH,KAAK,EACLC,UAAU,EACVC,QAAQ,EACRpM,YAAa,KARO,mBACfwK,EADe,KACJC,EADI,OAWgBjJ,oBAAS,GAXzB,mBAWf6K,EAXe,KAWFC,EAXE,OAagC/K,IAA9CE,EAbc,EAadA,UAAWE,EAbG,EAaHA,MAAOI,EAbJ,EAaIA,YAAauB,EAbjB,EAaiBA,WAEjC0H,EAAe,uCAAG,WAAOC,GAAP,iBAAA/I,EAAA,6DACtB+I,EAAMC,iBAcY,QAbZ9I,EAAO,CACX2I,KAAMP,EAAUO,KAChB5L,OAAQqL,EAAUrL,OAClBuF,KAAM8F,EAAU9F,KAChB6H,eAAgB,CACdL,IAAK1B,EAAU0B,IACfC,SAAU3B,EAAU2B,SACpBC,OAAQ5B,EAAU4B,QAEpBpM,YAAawK,EAAUxK,cAIhB0E,OACPzC,EAAM,OAEU,QAAdG,EAAKsC,OACPzC,EAAM,QAnBc,kBAuBGF,EACrB6B,sCAAoC3B,EACpC,OACAgH,KAAKC,UAAU9G,GACf,CAAE,eAAgB,qBA3BA,cA8BPgH,SACXkD,GAAe,GA/BG,kDAkCpB9M,QAAQC,IAAIkC,GAlCQ,0DAAH,sDAsCfyJ,EAAe,SAACH,GAAW,IAAD,EACRA,EAAM9E,OAApBjH,EADsB,EACtBA,GAAI4L,EADkB,EAClBA,MACNO,EAAQ,eAAQb,GACtBa,EAASnM,GAAM4L,EACfL,EAAa,eAAKY,KAGdmB,EAAkB,SAACvB,GAAW,IAAD,EACTA,EAAM9E,OAAtBjH,EADyB,EACzBA,GAAIuN,EADqB,EACrBA,QACNpB,EAAQ,eAAQb,GACtBa,EAASnM,GAAMuN,EACfhC,EAAa,eAAKY,KAGpB,OAAIgB,EACK,kBAAC,IAAD,CAAU3L,GAAG,eAIpB,kBAACf,EAAA,EAAD,CAAMmE,MAAO,CAAEkG,OAAQ,SACrB,kBAACrK,EAAA,EAAKwE,OAAN,KACE,kBAACxE,EAAA,EAAKG,MAAN,CAAYgE,MAAO,CAAEwH,UAAW,SAAhC,eAEF,kBAAC3L,EAAA,EAAKE,KAAN,KACG8B,GACC,kBAAC,EAAD,CACEwF,QAAS,uBACTxF,MAAOA,EACP6F,MAAM,EACNT,MAAOzD,IAGV7B,GAAa,kBAAC,EAAD,OACZA,GACA,kBAAC6E,EAAA,EAAD,CAAMiF,SAAUP,GACd,kBAAC1E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,2BACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,OACHwF,KAAK,OACLkH,YAAY,0BACZrF,SAAU6E,OAKlB,kBAAC9E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,uCACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,SACHwF,KAAK,OACLkH,YAAY,aACZrF,SAAU6E,OAKlB,kBAAC9E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,aACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEE,GAAG,SACHjM,UAAU,UACVV,GAAG,OACH4M,QAAM,EACNvF,SAAU6E,GAEV,4BAAQW,SAAO,EAACjB,MAAO,MAAvB,OAGA,4BAAQA,MAAM,MAAd,gBACA,4BAAQA,MAAM,OAAd,gCAKR,kBAACxE,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,wBACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKG,MAAN,CACEiG,QAAM,EACNhG,MAAM,MACNhC,KAAK,WACLxF,GAAG,MACHqH,SAAUiG,IAEZ,kBAAClG,EAAA,EAAKG,MAAN,CACEiG,QAAM,EACNhG,MAAM,WACNhC,KAAK,WACLxF,GAAG,WACHqH,SAAUiG,IAEZ,kBAAClG,EAAA,EAAKG,MAAN,CACEiG,QAAM,EACNhG,MAAM,SACNhC,KAAK,WACLxF,GAAG,SACHqH,SAAUiG,OAKlB,kBAAClG,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,oBACA,kBAACnF,EAAA,EAAKN,IAAN,KACE,kBAACC,EAAA,EAAD,CAAKyF,GAAI,GACP,kBAACpF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,cACHwF,KAAK,OACLkH,YAAY,oBACZrF,SAAU6E,OAKlB,kBAAC/D,EAAA,EAAD,CAAQC,QAAQ,UAAU5C,KAAK,UAA/B,cCtLNiI,EAAU,CACdC,QAAS,QACTC,QAAS,OACTrH,OAAQ,OACRD,MAAO,QAGHzB,EAAQ,CACZ2B,gBAAiB,UACjBqH,UAAW,oBACX7H,UAAW,QACXY,SAAU,QACVkH,KAAM,IACNC,OAAQ,IACRxH,OAAQ,OACRD,MAAO,QAGH0H,EAAO,CACX3B,UAAW,MACXtH,YAAa,OACbkJ,MAAO,WACPxH,SAAU,QACVkH,QAAS,SAGL9P,EAAO,IAAIP,KAaF6K,EAXA,WACb,OACE,6BACE,yBAAKtD,MAAO6I,IACZ,yBAAK7I,MAAOA,GACV,uBAAGA,MAAOmJ,GAAV,QAAmBnQ,EAAKqQ,iBAAxB,4DCjCKC,EAAcC,wBAAc,CACvCC,YAAY,EACZC,MAAO,KACPC,OAAQ,KACRC,MAAO,aACPC,OAAQ,e,8CCgCKC,GAhCI,WACjB,IAAMC,EAAOC,qBAAWT,GACxB,OACE,kBAACU,EAAA,EAAD,CAAQC,GAAG,OAAOzG,QAAQ,QACxB,kBAACwG,EAAA,EAAOE,MAAR,CAAc9H,KAAK,cAChB,IACD,yBACEpC,MAAO,CAAEuB,aAAc,OAAQE,MAAO,QACtC0I,IAAKC,KACLC,IAAI,SALR,kCASCP,EAAKN,YACJ,kBAAC,IAAMpM,SAAP,KACE,kBAACkN,GAAA,EAAD,CAAKxO,UAAU,WACb,kBAACwO,GAAA,EAAIC,KAAL,CAAUnI,KAAK,cAAf,aACA,kBAACoI,GAAA,EAAD,CAAa1P,MAAM,aAAaM,GAAG,gBACjC,kBAACoP,GAAA,EAAYC,KAAb,CAAkBrI,KAAK,eAAvB,OACA,kBAACoI,GAAA,EAAYE,QAAb,MACA,kBAACF,GAAA,EAAYC,KAAb,CAAkBrI,KAAK,eAAvB,SAGJ,kBAACkI,GAAA,EAAD,KACE,kBAACA,GAAA,EAAIC,KAAL,CAAU9G,QAASqG,EAAKF,QAAxB,gBC2DGe,GAlFF,WACX,IAAMb,EAAOC,qBAAWT,GADP,EAGiB5L,mBAAS,CACzCkN,MAAO,GACPC,SAAU,KALK,mBAGVnE,EAHU,KAGCC,EAHD,OAQ0BlJ,IAAnCI,EARS,EAQTA,MAAOI,EARE,EAQFA,YAAauB,EARX,EAQWA,WAEtBsL,EAAiB,uCAAG,WAAO3D,GAAP,eAAA/I,EAAA,6DACxB+I,EAAMC,iBADkB,kBAIKnJ,EACzB6B,kDACA,OACAqF,KAAKC,UAAU,CACbwF,MAAOlE,EAAUkE,MACjBC,SAAUnE,EAAUmE,WAEtB,CAAE,eAAgB,qBAXE,OAIhB/L,EAJgB,OAatBgL,EAAKH,MAAM7K,EAAa4K,OAAQ5K,EAAa2K,OAbvB,gDAetB/N,QAAQC,IAAI,gBAfU,yDAAH,sDAmBjB2L,EAAe,SAACH,GAAW,IAAD,EACRA,EAAM9E,OAApBjH,EADsB,EACtBA,GAAI4L,EADkB,EAClBA,MACNO,EAAQ,eAAQb,GACtBa,EAASnM,GAAM4L,EACfL,EAAa,eAAKY,KAGpB,OACE,kBAACtF,EAAA,EAAD,CACEjC,MAAO,CACL+K,eAAgB,SAChBjC,QAAS,OACTkC,WAAY,SACZxD,UAAW,UAGZ3J,GAAS,kBAAC,EAAD,CAAYwF,QAAS,eAAgBxF,MAAOA,EAAO6F,MAAM,EAAOT,MAAOzD,IACjF,kBAAC0C,EAAA,EAAD,KACE,kBAACrG,EAAA,EAAD,CAAMmE,MAAO,CAAEyB,MAAO,UACpB,kBAAC5F,EAAA,EAAKwE,OAAN,CAAavE,UAAU,eAAvB,kCAGA,kBAACD,EAAA,EAAKE,KAAN,KACE,kBAACyG,EAAA,EAAD,CAAMiF,SAAUqD,GACd,kBAACtI,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,sBACA,kBAACnF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,QACHwF,KAAK,QACLkH,YAAY,cACZrF,SAAU6E,KAGd,kBAAC9E,EAAA,EAAKkF,MAAN,KACE,kBAAClF,EAAA,EAAKmF,MAAN,iBACA,kBAACnF,EAAA,EAAKqF,QAAN,CACEzM,GAAG,WACHwF,KAAK,WACLkH,YAAY,WACZrF,SAAU6E,KAGd,kBAAC/D,EAAA,EAAD,CAAQC,QAAQ,UAAUyH,OAAK,EAACrK,KAAK,UAArC,gBChBCsK,GA7CH,WAAO,IAGbC,EAHY,EnBdK,WAAO,IAAD,EACDzN,oBAAS,GADR,mBACpB+L,EADoB,KACb2B,EADa,OAE2B1N,qBAF3B,mBAEpB2N,EAFoB,KAECC,EAFD,OAGC5N,qBAHD,mBAGpBgM,EAHoB,KAGZ6B,EAHY,KAKrB5B,EAAQzL,uBAAY,SAACwL,EAAQD,EAAO+B,GACxCJ,EAAS3B,GACT8B,EAAU7B,GACV,IAAM+B,EACJD,GAAkB,IAAI/S,MAAK,IAAIA,MAAOiT,UAAY,MACpDJ,EAAuBG,GACvBE,aAAaC,QACX,WACAzG,KAAKC,UAAU,CACbsE,OAAQA,EACRD,MAAOA,EACPoC,WAAYJ,EAAwBK,mBAGvC,IAEGlC,EAAS1L,uBAAY,WACzBkN,EAAS,MACTE,EAAuB,MACvBC,EAAU,MACVI,aAAaI,WAAW,cACvB,IA2BH,OAzBA3M,qBAAU,WACR,GAAIqK,GAAS4B,EAAqB,CAChC,IAAMW,EACJX,EAAoBK,WAAY,IAAIjT,MAAOiT,UAC7C3R,EAAckS,WAAWrC,EAAQoC,QAEjCE,aAAanS,KAEd,CAAC0P,EAAOG,EAAQyB,IAEnBjM,qBAAU,WACR,IAAM+M,EAAahH,KAAKiH,MAAMT,aAAaU,QAAQ,aAEjDF,GACAA,EAAW1C,OACX,IAAIhR,KAAK0T,EAAWN,YAAc,IAAIpT,MAEtCkR,EACEwC,EAAWzC,OACXyC,EAAW1C,MACX,IAAIhR,KAAK0T,EAAWN,eAGvB,CAAClC,IAEG,CAAEF,QAAOE,QAAOC,SAAQF,UmBtCU4C,GAAjC7C,EADQ,EACRA,MAAOE,EADC,EACDA,MAAOC,EADN,EACMA,OAAQF,EADd,EACcA,OAyB9B,OApBEyB,EADE1B,EAEA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO8C,KAAK,cAAcC,OAAK,GAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,cAAcC,OAAK,GAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,KAAK,aAAaC,OAAK,GAC5B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAU5P,GAAG,gBAKX,kBAAC,GAAD,MAKN,kBAAC0M,EAAYmD,SAAb,CACEzF,MAAO,CACLwC,aAAcC,EACdA,MAAOA,EACPC,OAAQA,EACRC,MAAOA,EACPC,OAAQA,IAGV,kBAAC,IAAD,KACE,kBAAC,GAAD,MACA,8BAAOuB,IAET,kBAAC,EAAD,QCpDNuB,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.1db78667.chunk.js","sourcesContent":["const CURRENT_TIMEZONE = 2;\n\nconst timestampToDate = (t) => {\n\n}\n\nconst convertToDate = (timestamp) => {\n   let date = new Date(timestamp);\n   let day = date.getDay();\n   let month = date.getMonth();\n   let year = date.getFullYear();\n   let hours = date.getHours();\n   let minutes = \"0\" + date.getMinutes();\n   let seconds = \"0\" + date.getSeconds();\n \n   return hours + ':' + minutes.substr(-2) + ':' + seconds.substr(-2) + '   ' + day + '/' + month + '-' + year ;\n }\n\nconst timestamptToTimeAgo = (t) => {\n   // Now in milliseconds\n   const now = (Date.now() - (CURRENT_TIMEZONE*60*60*1000))/1000\n   let diff = Math.round(now - t)/60; // Minutes\n   \n   if (diff >= 60) {\n      return Math.round(diff/60) + ' hours ago'\n   }\n\n   diff = Math.round(diff)\n   if (diff === 0) {\n      return 'Just now'\n   }\n   return diff + ' minutes ago'\n}\n\nexports.timestampToDate = timestampToDate; \nexports.timestamptToTimeAgo = timestamptToTimeAgo; \nexports.convertToDate = convertToDate;","module.exports = __webpack_public_path__ + \"static/media/ntnu_logo.9b4c0ba4.png\";","import { useState, useEffect, useCallback } from 'react';\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n  const [userId, setUserId] = useState();\n\n  const login = useCallback((userId, token, expirationDate) => {\n    setToken(token);\n    setUserId(userId);\n    const currTokenExpirationDate =\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(currTokenExpirationDate);\n    localStorage.setItem(\n      'userData',\n      JSON.stringify({\n        userId: userId,\n        token: token,\n        expiration: currTokenExpirationDate.toISOString(),\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setTokenExpirationDate(null);\n    setUserId(null);\n    localStorage.removeItem('userData');\n  }, []);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem('userData'));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expiration) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expiration)\n      );\n    }\n  }, [login]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nconst TableItem = (props) => {\n  return (\n     <tr>\n        {Object.keys(props).map(entry => (\n           <td key={entry}>{props[entry]}</td>\n        ))}\n     </tr>\n     \n  );\n};\n\nexport default TableItem;\n","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport TableItem from './TableItem';\n\nconst TableList = (props) => {\n  if (props.content.objects.length === 0) {\n    return (\n      <div>\n        <h2>No content available</h2>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <Table responsive=\"sm\">\n        <thead>\n          <tr>\n             {props.content.headers.map((title) => (\n                <th key={title}>{title}</th>\n             ))}\n          </tr>\n        </thead>\n        <tbody>\n          {props.content.objects.map((row) => (\n              <TableItem key={Math.random()} {...row} />\n          ))}\n        </tbody>\n      </Table>\n    </div>\n  );\n};\n\nexport default TableList;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\nimport timeUtil from '../../shared/util/timeUtil';\n\n\nconst SOTable = (props) => {\n\n  const headers = ['Name', 'Area', 'Last seen'];\n\n  const objects = [];\n\n  for (let i = 0; i < props.content.objects.length; i++) {\n    const obj = props.content.objects[i];\n    const entry = {};\n    try {\n      entry.id = obj.byname;\n      entry.area = obj.area;\n      entry.lastseen = timeUtil.timestamptToTimeAgo(obj.lastseen);\n    } catch (err) {\n      console.log('Something went wrong accessing the array');\n    }\n\n    objects.push(entry);\n  }\n\n  const content = { objects: objects, headers: headers}\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\" >\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>{props.description}</Card.Text>\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SOTable;\n","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\nimport timeUtil from '../../shared/util/timeUtil';\n\n\n\nconst MHMTable = (props) => {\n\n   const headers = ['Name', 'Workstatus', 'Status', 'Area', 'Last seen']\n\n   const objects = []\n\n   for (let i = 0; i < props.content.objects.length; i++) {\n      const obj = props.content.objects[i];\n      const entry = {};\n      try {\n        entry.id = obj.byname;\n        entry.workstatus = obj.workstatus\n        entry.status = obj.status\n        entry.area = obj.area;\n        entry.lastseen = timeUtil.timestamptToTimeAgo(obj.lastseen);\n      } catch (err) {\n        console.log('Something went wrong accessing the array');\n      }\n  \n      objects.push(entry);\n    }\n  \n    const content = { objects: objects, headers: headers}\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\">\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>\n           {props.description}\n        </Card.Text>\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MHMTable;","import React from 'react';\nimport { Card } from 'react-bootstrap';\n\nimport TableList from './TableList';\n\nimport timeUtil from '../../shared/util/timeUtil';\n\nconst JobTable = (props) => {\n  const headers = ['From', 'To', 'SO', 'MHM', 'Work Status', 'Created'];\n\n  const objects = [];\n\n  for (let i = 0; i < props.jobs.length; i++) {\n    const obj = props.jobs[i];\n    const entry = {};\n    if (i === 1) {\n      if (obj.timeassigned){\n        headers.push('Assigned');\n      }\n      if (obj.timecompleted) {\n        headers.push('Completed');\n      }\n    }\n\n    if (i === 1) {\n      console.log(obj)\n    }\n    try {\n      entry.from = obj.fromarea;\n      entry.to = obj.toarea;\n      entry.so = obj.so;\n      entry.mhm = obj.mhm;\n      entry.workstatus = obj.workstatus;\n      entry.created = timeUtil.convertToDate(obj.timecreated);\n      if (obj.timeassigned) {\n        entry.assigned = timeUtil.convertToDate(obj.timeassigned);\n      }\n      if (obj.timecompleted) {\n        entry.completed = timeUtil.convertToDate(obj.timecompleted);\n      }\n    } catch (err) {\n      console.log('Something went wrong accessing the array');\n    }\n\n    objects.push(entry);\n  }\n\n  const content = { objects: objects, headers: headers };\n\n  return (\n    <Card className=\"text-left shadow-sm p-3 mb-5 bg-white rounded\">\n      <Card.Body>\n        {props.title && (\n          <React.Fragment>\n            <Card.Title>{props.title}</Card.Title>\n            <Card.Text>{props.description}</Card.Text>\n          </React.Fragment>\n        )}\n\n        <Card.Body>\n          <TableList content={content} />\n        </Card.Body>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default JobTable;\n","import React from 'react';\n\nimport { Spinner } from 'react-bootstrap';\n\nconst LoadingSpinner = props => {\n   return (\n      <Spinner animation=\"border\" role=\"status\">\n         <span className=\"sr-only\">Loading...</span>\n      </Spinner>\n   )\n} \n\nexport default LoadingSpinner;","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState();\n\n  const activeHttpRequest = useRef([]);\n\n  const sendRequest = useCallback(\n    async (url, method = 'GET', body = null, headers = {}) => {\n      setIsLoading(true);\n      const httpAbortController = new AbortController();\n      activeHttpRequest.current.push(httpAbortController);\n      try {\n        const response = await fetch(url, {\n          method,\n          body,\n          headers,\n          signal: httpAbortController.signal,\n        });\n\n        const responseData = await response.json();\n\n        activeHttpRequest.current = activeHttpRequest.current.filter(\n          (reqCtrl) => reqCtrl !== httpAbortController\n        );\n\n        if (!response.ok) {\n          setIsLoading(false);\n          throw new Error(responseData.message);\n        }\n\n        setIsLoading(false);\n        return responseData;\n      } catch (err) {\n        setError(err.message);\n        setIsLoading(false);\n        throw err;\n      }\n    },\n    []\n  );\n\n  const clearError = () => {\n    setError(null);\n  };\n\n  // => Clearnup, never request from a page were no longer visiting.\n  useEffect(() => {\n    return () => {\n      activeHttpRequest.current.forEach((abortCtrl) => abortCtrl.abort());\n    };\n  }, []);\n\n  return { isLoading, error, sendRequest, clearError };\n};\n","import React, { useState, useEffect } from 'react';\n\nimport { Card, Tab, Tabs } from 'react-bootstrap';\n\nimport JobTable from '../Jobtable';\n\nimport LoadingSpinner from '../../../shared/components/UIElements/LoadingSpinner';\n\nimport { useHttpClient } from '../../../shared/hooks/http-hook';\n\nconst JobCard = (props) => {\n  const [jobKey, setJobKey] = useState('scheduled');\n\n  const [loadedJobs, setLoadedJobs] = useState();\n\n  const { isLoading, sendRequest } = useHttpClient();\n\n  let url = '/jobs/table/' + jobKey;\n\n  useEffect(() => {\n    const requestJob = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + url\n        );\n        setLoadedJobs(responseData.jobs);\n      } catch (err) {\n        console.log('Cold not fetch it');\n      }\n    };\n    requestJob();\n  }, [sendRequest, jobKey, url]);\n\n  return (\n    <Card\n      style={{ marginLeft: '20px', marginRight: '20px', marginBottom: '25px', borderRadius: '6px' }}\n    >\n      <Card.Header>\n        <Card.Title>Jobs</Card.Title>\n        <Tabs\n          id=\"controlled-tab-example\"\n          activeKey={jobKey}\n          onSelect={(tab) => setJobKey(tab)}\n        >\n          <Tab eventKey=\"scheduled\" title=\"Scheduled\"></Tab>\n          <Tab eventKey=\"unscheduled\" title=\"Unscheduled\"></Tab>\n          <Tab eventKey=\"completed\" title=\"Completed\"></Tab>\n        </Tabs>\n      </Card.Header>\n      <Card.Body>\n        <React.Fragment>\n          {loadedJobs && !isLoading && (\n            <JobTable jobs={loadedJobs} type={jobKey} />\n          )}\n          {isLoading && (\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          )}\n        </React.Fragment>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default JobCard;\n","import React, { useState } from 'react';\n\nimport { Card, Row, Col, Container, Form } from 'react-bootstrap';\n\nconst InfoTable = (props) => {\n  const rowStyle = {\n    borderBottom: '.5px dashed #ccc',\n    paddingTop: '8px',\n    paddingBottom: '8px',\n  };\n\n  const rightStyle = {\n    textAlign: 'right',\n  };\n\n  const [autoRefresh, setAutoRefresh] = useState(false);\n\n  const output = {\n    serverstatus: 'Ye',\n    mqttstatus: 'Yo',\n    currentmap: 'LabConfig2',\n  };\n\n  let server = (\n    <div>\n      <span style={{ paddingRight: '7px' }}>Error</span>\n      <div\n        style={{\n          float: 'right',\n          width: '14px',\n          height: '14px',\n          backgroundColor: 'f54242',\n          borderRadius: '12px',\n        }}\n      />\n    </div>\n  );\n  if (props.server === 1) {\n    server = (\n      <div>\n        <span style={{ paddingRight: '7px', fontSize: '15px' }}>RUNNING</span>\n        <div\n          style={{\n            float: 'right',\n            width: '22px',\n            height: '22px',\n            backgroundColor: '#2ade36',\n            borderRadius: '12px',\n          }}\n        />\n      </div>\n    );\n  }\n\n  let mqtt = (\n    <div>\n      <span>Disconnected</span>\n    </div>\n  );\n  if (props.isactive) {\n    mqtt = (\n      <div>\n        <span>Connected</span>\n      </div>\n    );\n  }\n\n  return (\n    <Card\n      style={{\n        borderRadius: '6px',\n        position: 'relative',\n        top: '7%',\n        marginRight: '15%',\n      }}\n    >\n      <Card.Body>\n        <Card.Title className=\"text-center\">General</Card.Title>\n        <Container responsive=\"sm\">\n          <Row style={rowStyle}>\n            <Col>Server</Col>\n            <Col style={rightStyle}>{server}</Col>\n          </Row>\n          <Row style={rowStyle}>\n            <Col>MQTT</Col>\n            <Col style={rightStyle}>{mqtt}</Col>\n          </Row>\n          <Row style={rowStyle}>\n            <Col>Map Loaded</Col>\n            <Col style={rightStyle}>{output.currentmap}</Col>\n          </Row>\n          <Row style={rowStyle}>\n            <Col><a href=\"https://app.pozyx.io/\" target=\"_blank\" rel=\"noopener noreferrer\" style={{ textAlign: 'center'}}>Pozyx Dashboard</a></Col>\n          </Row>\n        </Container>\n        <Container style={{ paddingTop: '25px' }}>\n          {props.buttonGroup}\n        </Container>\n        <Form\n          style={{ textAlign: 'center' }}\n          onChange={() => {\n            props.triggerAutoRefresh(autoRefresh, setAutoRefresh);\n          }}\n        >\n          <Form.Check type=\"switch\" id=\"auto-refresh-switch\" label=\"Refresh\" />\n        </Form>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default InfoTable;\n","import React, { useState } from 'react';\n\nimport { Modal, Button } from 'react-bootstrap';\n\nconst ReactModal = (props) => {\n  const [show, setShow] = useState(true);\n\n  const handleClose = () => {\n    setShow(false);\n    props.clear();\n  };\n  // const handleShow = () => setShow(true);\n  return (\n    <React.Fragment>\n      <Modal show={show} onHide={handleClose}>\n        <Modal.Header closeButton>\n          <Modal.Title>{props.heading}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>{props.error}</Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={handleClose}>\n            Close\n          </Button>\n          {props.save && (\n            <Button variant=\"primary\" onClick={handleClose}>\n              Save Changes\n            </Button>\n          )}\n        </Modal.Footer>\n      </Modal>\n    </React.Fragment>\n  );\n};\n\nexport default ReactModal;\n","const requestSOs = async (setLoadedSOs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/so'\n    );\n\n    setLoadedSOs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch SOs');\n    return false;\n  }\n};\n\nconst requestMHMs = async (setLoadedMHMs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/mhm'\n    );\n\n    setLoadedMHMs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch MHMs', err);\n    return false;\n  }\n};\n\nconst requestJobs = async (setLoadedJobs, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/jobs'\n    );\n\n    setLoadedJobs(responseData);\n    return true;\n  } catch (err) {\n    console.log('Could not fetch Jobs');\n    return false;\n  }\n};\n\nconst requestTableData = async (setLoadedTableData, sendRequest) => {\n  try {\n    const responseData = await sendRequest(\n      process.env.REACT_APP_BACKEND_URL + '/advanced/info'\n    );\n    setLoadedTableData(responseData);\n  } catch (err) {\n    console.log('Could not fetch table info', err);\n  }\n};\n\nconst requestDashboardData = async (\n  setLoadedSOs,\n  setLoadedMHMs,\n  setLoadedJobs,\n  setLoadedTableData,\n  sendRequest\n) => {\n  try {\n    const stat1 = await requestSOs(setLoadedSOs, sendRequest);\n    const stat2 = await requestMHMs(setLoadedMHMs, sendRequest);\n    const stat3 = await requestJobs(setLoadedJobs, sendRequest);\n    const stat4 = await requestTableData(setLoadedTableData, sendRequest);\n    if (stat1 && stat2 && stat3 && stat4) {\n      return 'success';\n    }\n    return 'failed';\n  } catch (err) {\n    console.log('[requestDashboardData], An error occured', err);\n    return 'failed';\n  }\n};\n\nexport default requestDashboardData;\n","import React, { useState, useEffect } from 'react';\nimport { Card, CardDeck, Button, Col} from 'react-bootstrap';\n\nimport SOTable from '../components/SOTable';\nimport MHMTable from '../components/MHMTable';\nimport JobCard from '../components/JobCard/JobCard';\nimport InfoTable from '../components/InfoTable/InfoTable';\n\nimport ReactModal from '../../shared/components/UIElements/ReactModal';\n\nimport getDataFunctions from '../getDataFunctions/getDataFunctions';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\n\nconst Dashboard = () => {\n  const [loadedSOs, setLoadedSOs] = useState();\n  const [loadedMHMs, setLoadedMHMs] = useState();\n  const [loadedJobs, setLoadedJobs] = useState();\n  const [loadedTableData, setLoadedTableData] = useState();\n\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const [mqttIsActive, setMqttIsActive] = useState(false);\n\n  const [assignmentIsActive, setAssignmentIsActive] = useState(false);\n\n  useEffect(() => {\n    getDataFunctions(\n      setLoadedSOs,\n      setLoadedMHMs,\n      setLoadedJobs,\n      setLoadedTableData,\n      sendRequest\n    );\n    return;\n  }, [sendRequest]);\n\n  const fireMqttConnection = async (status) => {\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/lifecycle/mqtt',\n        'POST',\n        JSON.stringify({\n          mqttstatus: status,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      if (response.success) {\n        if (status === 'activate') {\n          setMqttIsActive(true);\n        }\n        if (status === 'shutdown') {\n          setMqttIsActive(false);\n        }\n      }\n    } catch (err) {\n      console.log('Something went wrong in the post request');\n    }\n  };\n\n  const fireAssignmentConnection = async (status) => {\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/lifecycle/ae',\n        'POST',\n        JSON.stringify({\n          aestatus: status,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      if (response.success) {\n        if (status === 'activate') {\n          setAssignmentIsActive(true);\n        }\n        if (status === 'shutdown') {\n          setAssignmentIsActive(false);\n        }\n      }\n    } catch (err) {\n      console.log(\n        'Something went wrong starting or shutting down the assignment engine'\n      );\n    }\n  };\n\n  let mqttButton;\n\n  if (!mqttIsActive) {\n    mqttButton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireMqttConnection('activate')}\n      >\n        <Button size=\"sm\" variant=\"outline-primary\">\n          Connect MQTT\n        </Button>\n      </Card>\n    );\n  }\n  if (mqttIsActive) {\n    mqttButton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireMqttConnection('shutdown')}\n      >\n        <Button size=\"sm\" variant=\"outline-warning\">\n          Disconnect MQTT\n        </Button>\n      </Card>\n    );\n  }\n\n  let aebutton;\n  if (!assignmentIsActive) {\n    aebutton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireAssignmentConnection('activate')}\n      >\n        <Button size=\"sm\" variant=\"outline-primary\">\n          Start Assignment Engine\n        </Button>\n      </Card>\n    );\n  }\n  if (assignmentIsActive) {\n    aebutton = (\n      <Card\n        border=\"white\"\n        className=\"text-right\"\n        onClick={() => fireAssignmentConnection('shutdown')}\n      >\n        <Button size=\"sm\" variant=\"outline-warning\">\n          Shutdown Assignment Engine\n        </Button>\n      </Card>\n    );\n  }\n\n  const buttonGroup = (\n    <div>\n      <div style={{ paddingBottom: '10px' }}>{mqttButton}</div>\n      <div style={{ paddingBottom: '10px' }}>{aebutton}</div>\n    </div>\n  );\n\n  let intervalId;\n\n  const dbRefreshInterval = async () => {\n    try {\n      const status = await getDataFunctions(\n        setLoadedSOs,\n        setLoadedMHMs,\n        setLoadedJobs,\n        setLoadedTableData,\n        sendRequest\n      );\n      if (status === 'failed') {\n        clearInterval(intervalId);\n      }\n      console.log('refreshed')\n    } catch (err) {}\n  };\n\n  const triggerAutoRefresh = (autoRefresh, setAutoRefresh) => {\n    if (autoRefresh) {\n      clearInterval(intervalId);\n      setAutoRefresh(false);\n      return\n    }\n    intervalId = setInterval(dbRefreshInterval, 10000);\n    setAutoRefresh(true);\n    return;\n  };\n\n  return (\n    <div>\n      <Card style={{ border: 'none' }}>\n        <Card.Body />\n      </Card>\n      {error && (\n        <ReactModal\n          heading={'Backend fetch failed'}\n          error={error}\n          save={false}\n          clear={clearError}\n        />\n      )}\n      {loadedMHMs && loadedSOs && loadedJobs && loadedTableData && (\n        <React.Fragment>\n          <CardDeck style={{ maxHeight: '700px', minHeight: '450px'}}>\n            <Col sm={9}>\n              <JobCard style={{ margin: '5px' }} jobs={loadedJobs} />\n            </Col>\n            <Col sm={3}>\n              <InfoTable\n                isactive={mqttIsActive}\n                server={loadedTableData.state}\n                buttonGroup={buttonGroup}\n                triggerAutoRefresh={triggerAutoRefresh}\n              />\n            </Col>\n          </CardDeck>\n\n          <CardDeck style={{ margin: '15px 5px 5px 15px' }}>\n            <SOTable\n              title={'Smart Objects'}\n              description={\n                'Objects to be picked up and delivered at specified locations.'\n              }\n              content={loadedSOs}\n            />\n            <MHMTable\n              title={'Material Handling Modules'}\n              description={'Handlers able to transport Smart Objects.'}\n              content={loadedMHMs}\n            />\n          </CardDeck>\n        </React.Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { useHttpClient } from '../shared/hooks/http-hook';\n\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport ReactModal from '../shared/components/UIElements/ReactModal';\n\nconst CreateJob = () => {\n  const [loadedSOs, setLoadedSOs] = useState();\n  const [loadedAreas, setLoadedAreas] = useState();\n  const [formState, setFormState] = useState({\n    description: '',\n    fromarea: null,\n    toarea: null,\n    so: null,\n  });\n  const [formSubmitSuccess, setFormSubmitSuccess] = useState(false);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  let soOptions, areaOptions;\n\n  useEffect(() => {\n    const requestSOs = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL + '/so'\n        );\n        setLoadedSOs(responseData.objects);\n      } catch (err) {}\n    };\n    const requestAreas = async () => {\n      try {\n        const responseData = await sendRequest(\n          process.env.REACT_APP_BACKEND_URL +\n            '/map/5efaf181f8a8e697068e13f5/areas'\n        );\n        setLoadedAreas(responseData.areas);\n      } catch (err) {}\n    };\n    requestSOs();\n    requestAreas();\n  }, [sendRequest]);\n\n  if (loadedSOs) {\n    soOptions = loadedSOs.map((so) => (\n      <option key={so.id} value={so.id}>\n        {so.byname}\n      </option>\n    ));\n  }\n\n  if (loadedAreas) {\n    areaOptions = loadedAreas.map((area) => (\n      <option key={area.id} value={area.id}>\n        {area.name}\n      </option>\n    ));\n  }\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    const body = {\n      description: formState.description,\n      fromarea: formState.fromarea,\n      toarea: formState.toarea,\n      soid: formState.so,\n    };\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/jobs',\n        'POST',\n        JSON.stringify(body),\n        { 'Content-Type': 'application/json' }\n      );\n\n      if (response.success) {\n        setFormSubmitSuccess(true);\n      }\n    } catch (err) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  if (formSubmitSuccess) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Card style={{ margin: '20px' }}>\n      <Card.Header>\n        <Card.Title style={{ marginTop: '10px' }}>Create Job</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        {error && (\n          <ReactModal\n            heading={'Something went wrong'}\n            error={error}\n            save={false}\n            clear={clearError}\n          />\n        )}\n        {isLoading && <LoadingSpinner />}\n        {!isLoading && (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    id=\"description\"\n                    type=\"text\"\n                    placeholder=\"Enter description\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>From AREA</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"fromarea\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    {areaOptions}\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label>To AREA</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"toarea\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    {areaOptions}\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Form.Group>\n              <Form.Label className=\"mr-sm-2\" htmlFor=\"chooseSO\">\n                Choose Smart Object\n              </Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"so\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    {soOptions}\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CreateJob;\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\n\nimport { useHttpClient } from '../shared/hooks/http-hook';\n\nimport { Card, Form, Button, Col } from 'react-bootstrap';\nimport LoadingSpinner from '../shared/components/UIElements/LoadingSpinner';\nimport ReactModal from '../shared/components/UIElements/ReactModal';\n\nconst CreateTag = () => {\n  const [formState, setFormState] = useState({\n    name: null,\n    byname: null,\n    type: '',\n    agv: false,\n    forklift: false,\n    manual: false,\n    description: '',\n  });\n\n  const [formSuccess, setFormSuccess] = useState(false);\n\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const onSubmitHandler = async (event) => {\n    event.preventDefault();\n    const body = {\n      name: formState.name,\n      byname: formState.byname,\n      type: formState.type,\n      transportclass: {\n        agv: formState.agv,\n        forklift: formState.forklift,\n        manual: formState.manual,\n      },\n      description: formState.description,\n    };\n\n    let url;\n    if (body.type === 'so') {\n      url = '/so';\n    }\n    if (body.type === 'mhm') {\n      url = '/mhm';\n    }\n\n    try {\n      const response = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + url,\n        'POST',\n        JSON.stringify(body),\n        { 'Content-Type': 'application/json' }\n      );\n\n      if (response.success) {\n        setFormSuccess(true);\n      }\n    } catch (err) {\n      console.log(error);\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  const checkboxHandler = (event) => {\n    const { id, checked } = event.target;\n    const newState = { ...formState };\n    newState[id] = checked;\n    setFormState({ ...newState });\n  };\n\n  if (formSuccess) {\n    return <Redirect to=\"/dashboard\" />;\n  }\n\n  return (\n    <Card style={{ margin: '20px' }}>\n      <Card.Header>\n        <Card.Title style={{ marginTop: '10px' }}>Create Tag</Card.Title>\n      </Card.Header>\n      <Card.Body>\n        {error && (\n          <ReactModal\n            heading={'Something went wrong'}\n            error={error}\n            save={false}\n            clear={clearError}\n          />\n        )}\n        {isLoading && <LoadingSpinner />}\n        {!isLoading && (\n          <Form onSubmit={onSubmitHandler}>\n            <Form.Group>\n              <Form.Label>Name (ID in pozyx)</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"name\"\n                    type=\"text\"\n                    placeholder=\"Enter ID number for Tag\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Name (to display in dashboard)</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    id=\"byname\"\n                    type=\"text\"\n                    placeholder=\"Enter name\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Type</Form.Label>\n              <Form.Row>\n                <Col xs={3}>\n                  <Form.Control\n                    as=\"select\"\n                    className=\"mr-sm-2\"\n                    id=\"type\"\n                    custom\n                    onChange={inputHandler}\n                  >\n                    <option default value={null}>\n                      ---\n                    </option>\n                    <option value=\"so\">Smart Object</option>\n                    <option value=\"mhm\">Material Handling Module</option>\n                  </Form.Control>\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Transport Class</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Check\n                    inline\n                    label=\"AGV\"\n                    type=\"checkbox\"\n                    id=\"agv\"\n                    onChange={checkboxHandler}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Forklift\"\n                    type=\"checkbox\"\n                    id=\"forklift\"\n                    onChange={checkboxHandler}\n                  />\n                  <Form.Check\n                    inline\n                    label=\"Manual\"\n                    type=\"checkbox\"\n                    id=\"manual\"\n                    onChange={checkboxHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Form.Group>\n              <Form.Label>Description</Form.Label>\n              <Form.Row>\n                <Col xs={6}>\n                  <Form.Control\n                    id=\"description\"\n                    type=\"text\"\n                    placeholder=\"Enter description\"\n                    onChange={inputHandler}\n                  />\n                </Col>\n              </Form.Row>\n            </Form.Group>\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n            </Button>\n          </Form>\n        )}\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default CreateTag;\n","import React from 'react';\n\nconst phantom = {\n  display: 'block',\n  padding: '20px',\n  height: '60px',\n  width: '100%',\n};\n\nconst style = {\n  backgroundColor: '#343a40',\n  borderTop: '1px solid #E7E7E7',\n  textAlign: 'right',\n  position: 'fixed',\n  left: '0',\n  bottom: '0',\n  height: '30px',\n  width: '100%',\n};\n\nconst text = {\n  marginTop: '5px',\n  marginRight: '15px',\n  color: 'darkGrey',\n  fontSize: 'small',\n  display: 'block',\n};\n\nconst date = new Date();\n\nconst Footer = () => {\n  return (\n    <div>\n      <div style={phantom} />\n      <div style={style}>\n        <p style={text}>© {date.getUTCFullYear()} Dept. of Mechanical and Industrial Engineering, NTNU</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  token: null,\n  userId: null,\n  login: () => {},\n  logout: () => {},\n});\n","import React, { useContext } from 'react';\n\nimport { AuthContext } from '../../../shared/context/auth-context';\n\nimport { Nav, Navbar, NavDropdown } from 'react-bootstrap';\nimport logo from './ntnu_logo.png';\n\nconst Navigation = () => {\n  const auth = useContext(AuthContext);\n  return (\n    <Navbar bg=\"dark\" variant=\"dark\">\n      <Navbar.Brand href=\"/dashboard\">\n        {' '}\n        <img\n          style={{ paddingRight: '10px', width: '40px' }}\n          src={logo}\n          alt=\"LOGO\"\n        />\n        Cloud Material Handling System\n      </Navbar.Brand>\n      {auth.isLoggedIn && (\n        <React.Fragment>\n          <Nav className=\"mr-auto\">\n            <Nav.Link href=\"/dashboard\">Dashboard</Nav.Link>\n            <NavDropdown title=\"Create new\" id=\"nav-dropdown\">\n              <NavDropdown.Item href=\"/create/job\">Job</NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"/create/tag\">Tag</NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Nav>\n            <Nav.Link onClick={auth.logout}>Sign out</Nav.Link>\n          </Nav>\n        </React.Fragment>\n      )}\n    </Navbar>\n  );\n};\n\nexport default Navigation;\n","import React, { useState, useContext } from 'react';\n\nimport { Container, Row, Card, Form, Button } from 'react-bootstrap';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport ReactModal from '../../shared/components/UIElements/ReactModal';\n\nconst Auth = () => {\n  const auth = useContext(AuthContext);\n\n  const [formState, setFormState] = useState({\n    email: '',\n    password: '',\n  });\n\n  const { error, sendRequest, clearError } = useHttpClient();\n\n  const authSubmitHandler = async (event) => {\n    event.preventDefault();\n\n    try {\n      const responseData = await sendRequest(\n        process.env.REACT_APP_BACKEND_URL + '/login/login',\n        'POST',\n        JSON.stringify({\n          email: formState.email,\n          password: formState.password,\n        }),\n        { 'Content-Type': 'application/json' }\n      );\n      auth.login(responseData.userId, responseData.token);\n    } catch (err) {\n      console.log('login failed');\n    }\n  };\n\n  const inputHandler = (event) => {\n    const { id, value } = event.target;\n    const newState = { ...formState };\n    newState[id] = value;\n    setFormState({ ...newState });\n  };\n\n  return (\n    <Container\n      style={{\n        justifyContent: 'center',\n        display: 'flex',\n        alginItems: 'center',\n        marginTop: '200px',\n      }}\n    >\n      {error && <ReactModal heading={\"Login failed\"} error={error} save={false} clear={clearError} />}\n      <Row>\n        <Card style={{ width: '500px'}}>\n          <Card.Header className=\"text-center\">\n            Please enter login credentials\n          </Card.Header>\n          <Card.Body>\n            <Form onSubmit={authSubmitHandler}>\n              <Form.Group>\n                <Form.Label>Email address</Form.Label>\n                <Form.Control\n                  id=\"email\"\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  onChange={inputHandler}\n                />\n              </Form.Group>\n              <Form.Group>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  id=\"password\"\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  onChange={inputHandler}\n                />\n              </Form.Group>\n              <Button variant=\"primary\" block type=\"submit\">\n                LOG IN\n              </Button>\n            </Form>\n          </Card.Body>\n        </Card>\n      </Row>\n    </Container>\n  );\n};\n\nexport default Auth;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n\nimport Dashboard from './dashboard/pages/Dashboard';\nimport CreateJob from './create/CreateJob';\nimport CreateTag from './create/CreateTag';\nimport Footer from './shared/components/UIElements/Footer';\nimport Navigation from './shared/components/Navigation/Navigation';\nimport Auth from './auth/pages/Auth';\n\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from './shared/hooks/auth-hook';\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/create/job\" exact>\n          <CreateJob />\n        </Route>\n        <Route path=\"/create/tag\" exact>\n          <CreateTag />\n        </Route>\n        <Route path=\"/dashboard\" exact>\n          <Dashboard />\n        </Route>\n        <Redirect to=\"/dashboard\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n          <Auth />\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <Navigation />\n        <main>{routes}</main>\n      </Router>\n      <Footer />\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}